from flask import Flask, render_template, request, redirect, url_for

app = Flask(__name__)


@app.route('/')
def login():
    return render_template('option.html')


# 获取提交参数及处理
@app.route('/sub', methods=['POST'])

def getLoginRequest():
    import time

    names = {"LU0107464264": "安本標準 - 科技股票基金 A類 Acc 美元",
             "LU0094541447": "安本標準 - 歐洲股票基金 A2類 Acc 歐元",
             "LU0011963831": "安本標準 - 北美股票基金 A2 類 Acc 美元",
             "LU0011963674": "安本標準 - 日本股票基金 A類 Acc 日圓",
             "LU0132414144": "安本標準 - 新興市場債券基金 A2類 Acc 美元",
             "LU0011963245": "安本標準 - 亞太股票基金 A類 Acc 美元",
             "LU0132412106": "安本環球 - 新興市場股票基金 A2類 Acc 美元",
             "LU0011963328": "安本標準 - 澳洲股票基金A2 類Acc澳元",
             "LU0231459107": "安本標準 - 亞洲小型公司基金 A類 Acc 美元",
             "LU0231483743": "安本標準 - 中國股票基金 A類 Acc 美元",
             "LU0231490524": "安本標準 - 印度股票基金 A類 Acc 美元",
             "LU0231460295": "安本標準 - 中國股票基金 A類 Acc 英鎊",
             "LU0231462077": "安本標準 - 印度股票基金 A類 Acc 英鎊",
             "LU0231455378": "安本標準 - 亞太股票基金 A類 Acc 英鎊",
             "LU0231457747": "安本標準 - 科技股票基金 A類 Acc 英鎊",
             "LU0231459958": "安本標準 - 亞洲小型公司基金 A類 Acc 英鎊",
             "LU0278937759": "安本標準 - 新興市場小型公司基金 A2類 Acc 美元",
             "LU0094547139": "安本標準 - 世界股票基金 A2類 Acc 美元",
             "LU0396314238": "安本標準 - 拉丁美洲股票基金 A類 Acc 美元",
             "LU0094548533": "安本標準 - 亞洲當地貨幣短期債券基金 A類 Acc 美元",
             "LU0278936439": "安本標準 - 日本小型公司基金 A2類 Acc 日圓",
             "LU0231454991": "安本標準 - 北美股票基金 D2 類 Acc 英鎊",
             "LU0396313180": "安本標準 - 亞洲地產股票基金 A2 類Acc 美元",
             "LU0505664713": "安本標準 - 東歐股票基金 A2類 Acc 歐元",
             "LU0505661966": "安本標準 - 歐洲股息基金A2 類Acc 歐元",
             "LU0505663152": "安本標準 - 世界資源股票基金 A2類 Acc 美元",
             "LU0278933410": "安本標準 - 日本小型公司基金 D2類 Acc 英鎊",
             "LU0278932362": "安本標準 - 新興市場小型公司基金 D2類 Acc 英鎊",
             "LU0119176310": "安本標準 - 歐元高收益債券基金 A類 Acc 歐元",
             "LU0011963757": "安本標準 - 英國股票基金 A2類 Acc 英鎊",
             "LU0912262788": "安本標準 - 日本股票基金 A類 Acc 美元(對沖)",
             "LU0941570995": "安本標準 - 日本小型公司基金 A2類 Acc 美元(對沖)",
             "LU0728926402": "安本標準 - 巴西股票基金 A2類 Acc 美元",
             "LU0566484027": "安本標準 - 北美小型公司基金 A類 Acc 美元",
             "LU1124234946": "安本標準 - 多元化收益基金 A類 Acc 美元",
             "LU1124234862": "安本標準 - 多元化收益基金 A類 MDis 美元",
             "HK0000065166": "東亞聯豐港元債券基金 R類 港元",
             "HK0000107257": "東亞聯豐亞太區多元收益基金 A類 Dis 美元",
             "HK0000107265": "東亞聯豐亞太區多元收益基金 A類 Dis 港元",
             "HK0000194255": "東亞聯豐亞太區多元收益基金 A類 Dis 人民幣 對沖",
             "HK0000065216": "東亞聯豐亞洲債券及貨幣基金 A類 Dis 美元",
             "HK0000081361": "東亞聯豐亞洲債券及貨幣基金 H類 Dis 港元",
             "HK0000074176": "東亞聯豐中國A股股票基金 A類 美元",
             "HK0000141801": "東亞聯豐中國鳳凰基金 A類 美元",
             "HK0000176732": "東亞聯豐人民幣核心債券基金 A類 Inc 人民幣",
             "HK0000176740": "東亞聯豐人民幣核心債券基金 A類 Inc 港元",
             "HK0000224201": "東亞聯豐亞太區靈活配置基金 A類 MDis 美元",
             "HK0000224227": "東亞聯豐亞太區靈活配置基金 A類 Dis 澳元 (對沖)",
             "HK0000065125": "東亞聯豐香港增長基金 R 類 港元",
             "HK0000288032": "東亞聯豐中國高收益入息基金 A類 Dis 美元",
             "HK0000288040": "東亞聯豐中國高收益入息基金 A類 Dis 港元",
             "HK0000288065": "東亞聯豐中國高收益入息基金 A類 Dis 人民幣 對沖",
             "HK0000288057": "東亞聯豐中國高收益入息基金 A類 Dis 澳元 對沖",
             "HK0000257433": "東亞聯豐中國滙通基金 A類 Dis 港元",
             "HK0000257441": "東亞聯豐中國滙通基金 A類 Dis 美元",
             "HK0000257458": "東亞聯豐中國滙通基金 A類 Acc 美元",
             "HK0000375474": "東亞聯豐中國滙通基金 A類 Dis 澳元 (對沖)",
             "HK0000375482": "東亞聯豐中國滙通基金 A類 Dis 人民幣 (對沖)",
             "HK0000464054": "東亞聯豐亞洲債券目標年期基金2022 A類 Dis 港元",
             "HK0000065208": "東亞聯豐亞洲債券及貨幣基金 A類 Acc 美元",
             "GB0000796242": "霸菱歐洲精選基金 A類 Inc 英鎊",
             "IE0000835953": "霸菱成熟及新興市場高收益債券基金 A類 Inc 美元",
             "IE0000829568": "霸菱國際債券基金 A類 Inc 美元",
             "IE0000828933": "霸菱拉丁美洲基金 A類 Inc 美元",
             "IE0000830459": "霸菱美元儲備基金 A類 Acc 美元",
             "IE0000829121": "霸菱歐洲基金A類 Inc 美元",
             "IE0000838189": "霸菱韓國聯接基金 A類 Acc 美元",
             "IE0000805634": "霸菱東歐基金A類 Inc 美元",
             "GB0000840719": "霸菱韓國基金 Acc 英鎊",
             "IE0004866772": "霸菱歐洲基金A類 Inc 歐元",
             "IE0004852103": "霸菱東歐基金A類 Inc 歐元",
             "IE0030016244": "霸菱環球領先基金 A類 Inc 美元",
             "IE0000830129": "霸菱亞洲增長基金 A類 Inc 美元",
             "IE0004851352": "霸菱環球資源基金A類 Inc 歐元",
             "IE0000931182": "霸菱環球資源基金A類 Inc 美元",
             "IE0000838304": "霸菱全球新興市場基金 A類 Inc 美元",
             "IE0000829238": "霸菱香港中國基金 A類 Inc 美元",
             "GB0030655780": "霸菱歐洲精選基金 A類 Inc 歐元",
             "IE0032158457": "霸菱成熟及新興市場高收益債券基金 A類 Inc 美元 (MDis)",
             "IE0004851808": "霸菱成熟及新興市場高收益債券基金 A類 Inc 歐元",
             "IE0004851022": "霸菱拉丁美洲基金 A類 Inc 歐元",
             "IE0033156484": "霸菱成熟及新興市場高收益債券基金 A類 Inc 英鎊 (對沖)",
             "IE0000829451": "霸菱澳洲基金 A類 Inc 美元",
             "GB0000822576": "霸菱德國增長基金 Acc 英鎊",
             "IE0004866889": "霸菱香港中國基金 A類 Inc 歐元",
             "GB0000804335": "霸菱歐洲增長基金 Inc 英鎊",
             "IE0030165983": "霸菱傾亞均衡基金A類 Acc 美元",
             "IE0004868604": "霸菱亞洲增長基金 A類 Inc 歐元",
             "IE0000830236": "霸菱大東協基金 A類 Inc 美元",
             "GB0000799923": "霸菱東方明珠基金 Acc 英鎊",
             "IE0004850503": "霸菱全球新興市場基金 A類 Inc 歐元",
             "IE0004866996": "霸菱國際債券基金 A類 Inc 歐元",
             "IE00B2NG2T18": "霸菱中國精選基金 A類 Inc 美元",
             "IE0004866665": "霸菱澳洲基金 A類 Inc 歐元",
             "IE00B3YQ9180": "霸菱澳洲基金 A類 Inc 澳元",
             "IE0004868828": "霸菱大東協基金 A類 Inc 歐元",
             "IE00B4YN5X00": "霸菱香港中國基金 A類 Inc 港元",
             "IE00B62P4Q86": "霸菱成熟及新興市場高收益債券基金 A類 Inc 港元 (MDis)",
             "IE00B237VG42": "霸菱傾亞均衡基金A類 Inc 美元",
             "GB0008192063": "霸菱德國增長基金 Acc 歐元",
             "IE0030016467": "霸菱環球領先基金 A類 Inc 英鎊",
             "GB00B3B9VC56": "霸菱環球農業基金A 類Acc 美元",
             "GB00B3B9V927": "霸菱環球農業基金A 類Acc 英鎊",
             "IE00BFDTF255": "霸菱大東協基金 A類 Acc 澳元 (對沖)",
             "IE00B881PF08": "霸菱成熟及新興市場高收益債券基金 A類 MDis 澳元 (對沖)",
             "GB00BXVMKV60": "霸菱德國增長基金 Acc 美元 (對沖)",
             "HK0000245693": "霸菱環球多元收益基金 A類 Dis 美元",
             "HK0000245685": "霸菱環球多元收益基金 A類 Acc 美元",
             "HK0000245677": "霸菱環球多元收益基金 A類 Dis 港元",
             "HK0000245669": "霸菱環球多元收益基金 A類 Acc 港元",
             "HK0000245719": "霸菱環球多元收益基金 A類 Dis 人民幣 對沖",
             "HK0000245701": "霸菱環球多元收益基金 A類 Acc 人民幣 對沖",
             "GB00BF2H6H20": "霸菱歐洲精選基金 A類 Acc 美元",
             "IE00BFM0MP15": "霸菱環球高收益債券基金 G類 Acc 美元",
             "IE00BFM0MQ22": "霸菱環球高收益債券基金 G類 Dis 美元",
             "IE00BFM0MX98": "霸菱環球高收益債券基金 G類 Dis 澳元",
             "IE00BFM0L103": "霸菱環球高級抵押債券基金 G類 Acc 美元",
             "IE00BFM0L210": "霸菱環球高級抵押債券基金 G類 Dis 美元",
             "IE00BFM0L764": "霸菱環球高級抵押債券基金 G類 Acc 澳元",
             "IE00BFM0L871": "霸菱環球高級抵押債券基金 G類 Dis 澳元",
             "HK0000098829": "華夏精選人民幣債券基金 A類 Dis 人民幣",
             "LU0531876844": "華夏中國機會基金 A類 Acc 美元",
             "HK0000439627": "華夏精選固定收益配置基金A HKD Acc",
             "HK0000439601": "華夏精選固定收益配置基金A USD Acc",
             "HK0000301942": "華夏精選亞洲債券基金A USD Acc",
             "LU0455925619": "Alquity 非洲基金 A類 Acc 美元",
             "LU1049765578": "Alquity 拉丁美洲基金 A類 Acc 美元",
             "LU1049766626": "Alquity 亞洲基金 A類 Acc 美元",
             "LU1049767863": "Alquity 印度次大陸基金 A類 Acc 美元",
             "CNE1000026R9": "建信雙息紅利債券型證券投資基金 H類 Dis 人民幣",
             "CNE1000026Q1": "建信優選成長混合型證券投資基金 H類 Dis 人民幣",
             "LU0048573645": "富達基金 - 東協基金 A類 Dis 美元",
             "LU0048575426": "富達基金 - 新興市場基金 A類 Dis 美元",
             "LU0061175625": "富達基金 - 歐洲小型公司基金 A類 Dis 歐元",
             "LU0048580855": "富達基金 - 大中華基金 A類 Dis 美元",
             "LU0048585144": "富達基金 - 日本基金A類日圓",
             "LU0048587603": "富達基金 - 日本小型公司基金 A類 Dis 日圓",
             "LU0048588080": "富達基金 - 北歐基金A類瑞典克朗",
             "LU0048597586": "富達基金 - 亞洲焦點 A類 Dis 美元",
             "LU0048621477": "富達基金 - 泰國基金 A類 Dis 美元",
             "LU0054237671": "富達基金 - 亞洲特別機會基金A類美元",
             "LU0048584097": "富達基金 - 國際基金 A類 Dis 美元",
             "LU0048578792": "富達基金 - 歐洲增長基金 A類 Dis 歐元",
             "LU0048579097": "富達基金- 歐元債券基金A類歐元",
             "LU0055114457": "富達基金 - 印尼基金 A類 Dis 美元",
             "LU0048622798": "富達基金 - 美元債券基金 A類 Dis 美元",
             "LU0050427557": "富達基金 - 拉丁美洲基金 A類 Dis 美元",
             "LU0048587868": "富達基金 - 馬來西亞基金 A類 Dis 美元",
             "LU0048580004": "富達基金 - 德國基金 A類 歐元",
             "LU0048588163": "富達基金 - 新加坡基金A類美元",
             "LU0075458603": "富達基金 - 臺灣基金 A類 Dis 美元",
             "LU0099575291": "富達基金  -環球電訊基金A類歐元",
             "LU0099574567": "富達基金 - 環球科技基金 A類 歐元",
             "LU0077335932": "富達基金 - 美國增長基金 A類 Dis 美元",
             "LU0088814487": "富達基金- 歐元藍籌基金 A類 歐元",
             "LU0048574536": "富達基金 - 澳洲基金 A類 Dis 澳元",
             "LU0114720955": "富達基金 - 環球健康護理基金 A類 Dis 歐元",
             "LU0114722498": "富達基金 - 環球金融服務基金 A類 Dis 歐元",
             "LU0114721508": "富達基金 - 環球消費行業基金 A類 歐元",
             "LU0048579410": "富達基金- 法國基金A類歐元",
             "LU0069449576": "富達基金- 世界基金 A類 歐元",
             "LU0064963852": "富達基金 - 美元現金基金 A類 Dis 美元",
             "LU0049112450": "富達基金 - 太平洋基金 A類 Dis 美元",
             "LU0048620586": "富達基金 - 靈活債券基金 A類 英鎊",
             "LU0048573561": "富達基金 - 美國基金 A類 Dis 美元",
             "LU0110060430": "富達基金 - 歐洲高收益基金A類歐元",
             "LU0064964074": "富達基金 - 歐元現金基金 A類 Dis 歐元",
             "LU0138981039": "富達基金 - 環球「息」增長基金A類美元",
             "LU0048582984": "富達基金 - 環球債券基金 A類 Dis 美元",
             "LU0161332480": "富達基金 - 日本領先基金 A類 Dis 日圓",
             "LU0119124781": "富達基金 - 歐洲動力增長基金 A類 Dis 歐元",
             "LU0173614495": "富達基金 - 中國焦點基金 A類 Dis 美元",
             "LU0205439572": "富達基金 - 亞太股息基金 A類 Dis 美元",
             "LU0197229882": "富達基金 - 印度焦點基金 A類 Dis 美元",
             "LU0119124278": "富達基金 - 歐洲大型公司基金 A類 歐元",
             "LU0052588471": "富達基金 - 歐元均衡基金 A類 歐元",
             "LU0114722902": "富達基金 - 環球工業基金 A類 Dis 歐元",
             "LU0132282301": "富達基金 - 美元高收益基金 A類 Dis 美元",
             "LU0054754816": "富達基金 - 瑞士基金 A類 瑞士法郎",
             "LU0238205958": "富達基金 - 新興市場債券基金 A類 Acc 美元",
             "LU0238205289": "富達基金 - 新興市場債券基金 A類 Acc 歐元",
             "LU0048581077": "富達基金 - 西班牙/葡萄牙基金 A類 歐元",
             "LU0069450319": "富達基金 - 歐盟50TM基金 A類 歐元",
             "LU0237698914": "富達基金 - 環球房地產基金 A類 Acc 美元",
             "LU0303823156": "富達基金 - 新興「歐非中東」基金 A類 Acc 美元",
             "LU0261947096": "富達基金 - 亞洲焦點 A類 Acc 美元",
             "LU0303816705": "富達基金 - 新興「歐非中東」基金 A類 Acc 歐元",
             "LU0261946445": "富達基金 - 亞洲焦點 A類 Acc 歐元",
             "LU0261950470": "富達基金 - 新興市場基金 A類 Acc 美元",
             "LU0261946288": "富達基金 - 環球債券基金 A類 Acc 美元",
             "LU0329678337": "富達基金 - 新興亞洲基金 A類 Acc 美元",
             "LU0353648891": "富達基金 - 環球通脹連繫債券基金 A類 Acc 美元",
             "LU0168057262": "富達基金 - 美元高收益基金 A類 MDis 美元",
             "LU0318931192": "富達基金 - 中國焦點基金 A類 Acc 歐元",
             "LU0251130802": "富達基金 - 歐洲高收益基金A類Acc歐元",
             "LU0353649279": "富達基金 - 環球通脹連繫債券基金 A類 Acc 歐元 (對沖)",
             "LU0261952419": "富達基金 - 環球健康護理基金 A類 Acc 歐元",
             "LU0197230542": "富達基金 - 印度焦點基金 A類 Dis 歐元",
             "LU0286668453": "富達基金 - 亞洲高收益基金 A類 Acc 美元",
             "LU0303816028": "富達基金 - 新興「歐非中東」基金 A類 Dis 歐元",
             "LU0261945553": "富達基金 - 東協基金 A類 Acc 美元",
             "LU0286669428": "富達基金 - 亞洲高收益基金 A類 MDis 美元",
             "LU0329678410": "富達基金 - 新興亞洲基金 A類 Acc 歐元",
             "LU0251131958": "富達基金 - 美國基金 A類 Acc 美元",
             "LU0390710027": "富達基金 - 環球短期債券基金 A類 Acc 美元",
             "LU0882574139": "富達基金 - 環球消費行業基金 A類 Acc 美元",
             "LU0772969993": "富達基金 – 環球股息基金 A類 Acc 美元",
             "LU0731783048": "富達基金 – 環球股息基金 A類 MInc 美元",
             "LU0742537680": "富達基金 – 環球股息基金 A類 MInc 港元",
             "LU0237698757": "富達基金 - 環球房地產基金 A類 Acc 歐元",
             "LU0702159699": "富達基金 - 亞洲小型公司基金 A類 Acc 美元",
             "LU0370787193": "富達基金 - 歐元企業債券基金 A類 Acc 歐元",
             "LU0353647653": "富達基金 - 歐洲股息基金 A類 Dis 歐元",
             "LU0157922724": "富達基金 - 環球焦點基金 A類 歐元",
             "LU0157215616": "富達基金 - 環球焦點基金 A類 美元",
             "LU0267387255": "富達基金 - 環球機遇基金 A類 Acc 歐元",
             "LU0267386448": "富達基金 - 環球機遇基金 A類 美元",
             "LU0048621717": "富達基金 - 英國基金 A類 Dis 英鎊",
             "LU0261952922": "富達基金 - 美元現金基金 A 類 Acc 美元",
             "LU0882574055": "富達基金 - 環球健康護理基金 A類 Acc 美元",
             "LU0261952682": "富達基金 - 歐盟50TM基金 A類 Acc 歐元",
             "LU0261948227": "富達基金 - 德國基金 A類 Acc 歐元",
             "LU0882574212": "富達基金 - 歐洲高收益基金A類MDis 美元(對沖)",
             "LU0997586606": "富達基金 - 歐洲增長基金 A類 Acc 美元 (對沖)",
             "LU0997587240": "富達基金 - 歐洲股息基金 A類 MDis 美元 (對沖)",
             "LU0963029086": "富達基金 - 美國基金 A類 Acc 澳元(對沖)",
             "LU1046420805": "富達基金 - 歐洲股息基金 A類 HMDIST(G) 澳元 (對沖)",
             "LU0997586788": "富達基金 - 歐洲小型公司基金 A類 Acc 美元 (對沖)",
             "LU0971096721": "富達基金 - 環球金融服務基金 A類 Dis 美元",
             "HK0000423837": "BMO 綜合平衡基金 (A類美元累算)",
             "HK0000423845": "BMO 綜合平衡基金 (A類美元每月分派)",
             "HK0000423852": "BMO 綜合平衡基金 (A類港元每月分派)",
             "LU0125727601": "安盛環球基金-泛靈頓歐洲增長 A類 Acc 歐元",
             "LU0216734045": "安盛環球基金-泛靈頓歐洲房地產 A類 Acc 歐元",
             "LU0266012318": "安盛環球基金-泛靈頓環球房地產 A類 Acc 美元",
             "LU1196529876": "安盛環球基金 - 亞洲短期債券 A Acc 美元",
             "LU1774149642": "安盛環球基金 - 亞洲短期債券 A MDis 美元",
             "LU1042830981": "安盛環球基金-泛靈頓歐洲房地產 A類 Acc 美元(對沖)",
             "LU1105446931": "安盛環球基金-泛靈頓歐洲房地產 A類 QDis 美元(對沖)",
             "LU1105447079": "安盛環球基金-泛靈頓歐洲房地產 A類 QDis 港元(對沖)",
             "LU0502904849": "富達基金 - 中國縱橫基金 A類 Acc 港元",
             "LU0532244745": "富達基金 - 亞洲高收益基金 A類 MDis 港元",
             "LU0238206170": "富達基金 - 新興市場債券基金 A類 MDis 美元",
             "LU0605520377": "富達基金 - 美元高收益基金 A類 Acc 美元",
             "LU0532245395": "富達基金 - 美元高收益基金 A類 MInc 港元",
             "LU0594300179": "富達基金 - 中國消費動力基金 A類 Acc 美元",
             "LU0261959422": "富達基金 - 歐洲動力增長基金 A類 Acc 歐元",
             "LU0168053600": "富達基金 - 歐洲高收益基金A類MDis 歐元",
             "LU1046421878": "富達基金 - 德國基金 A類 Acc 美元(對沖)",
             "LU1046420474": "富達基金 - 東協基金 A類 Acc 澳元 (對沖)",
             "LU1046420714": "富達基金 - 亞太股息基金 A類 MDis 澳元 (對沖)",
             "LU1046420557": "富達基金 - 太平洋基金 A類 Acc 澳元 (對沖)",
             "LU1046421795": "富達基金 - 環球科技基金 A類 Acc 美元",
             "LU0605512275": "富達基金 - 亞洲債券基金 A類 Acc 美元",
             "LU0605512432": "富達基金 - 亞洲債券基金 A類 MDis 美元",
             "LU1371569200": "富達基金 - 亞洲債券基金 A類 MINCOME(G) 美元",
             "LU1371569465": "富達基金 - 亞洲債券基金 A類 MINCOME(G) 港元",
             "LU1371569549": "富達基金 - 亞洲債券基金 A類 HMDIST(G) 澳元 (對沖)",
             "LU0882574303": "富達基金 - 環球收益基金 A類 Acc 美元",
             "LU0882574568": "富達基金 - 環球收益基金 A類 MINCOME(G)<U+00A0>美元",
             "LU0997587323": "富達基金 - 環球收益基金 A類<U+00A0>MINCOME(G)<U+00A0>美元 (對沖)",
             "LU1481012216": "富達基金 - 環球收益基金 A類<U+00A0>MINCOME(G) 港元 (對沖)",
             "LU1816631466": "富達基金 - 環球收益基金 A類<U+00A0> HMDIST(G)<U+00A0>澳元 (對沖)",
             "LU0905233846": "富達基金 - 環球多元收益基金 A類 Acc 美元",
             "LU0905234141": "富達基金 - 環球多元收益基金 A類 MINCOME(G) 美元",
             "LU0905234497": "富達基金 - 環球多元收益基金 A類 MINCOME(G) 港元",
             "LU0982800228": "富達基金 - 環球多元收益基金 A類 MINCOME(G) 澳元 (對沖)",
             "LU1046420987": "富達基金 - 環球多元收益基金 A類 HMDIST(G) 澳元 (對沖)",
             "LU0905234067": "富達基金 - 環球多元收益基金 A類 Acc 港元",
             "LU1313547462": "富達基金 - 中國高收益基金 A類 Acc 美元",
             "LU1345481698": "富達基金 - 中國高收益基金 A類 MINCOME(G) 美元 (對沖)",
             "LU1345481854": "富達基金 - 中國高收益基金 A類 MINCOME(G) 港元 (對沖)",
             "LU1345482316": "富達基金 - 中國高收益基金 A類 HMDIST(G) 澳元 (對沖)",
             "LU0088927925": "駿利亨德森遠見泛歐地產股票基金 A2類 Acc 歐元",
             "LU0229494975": "駿利亨德森遠見亞太地產股票基金 A2類 Acc 美元",
             "LU0011890265": "亨德森遠見日本小型公司基金 A2類 Acc 美元",
             "LU0209137388": "駿利亨德森遠見環球地產股票基金 A2類 Acc 美元",
             "LU0011889846": "駿利亨德森遠見歐元領域基金 A2類 Acc 歐元",
             "LU0046217351": "駿利亨德森遠見泛歐小型公司基金 A2類 Acc 歐元",
             "LU0011889929": "亨德森遠見日本機會基金 A2類 Acc 美元",
             "LU0209156925": "駿利亨德森遠見泛歐地產股票基金 A3類 Inc 歐元",
             "LU0229494629": "駿利亨德森遠見亞太地產股票基金 A1類 Inc 美元",
             "LU0138821268": "駿利亨德森遠見泛歐股票基金 A2類 Acc 歐元",
             "LU0572942307": "駿利亨德森遠見亞太地產股票基金 A2類 Acc 歐元",
             "LU0264606111": "駿利亨德森遠見亞洲股票收益基金 A2類 Acc 美元",
             "LU0264605907": "駿利亨德森遠見亞洲股票收益基金 A1類 Inc 美元",
             "LU0011890851": "駿利亨德森遠見亞洲增長基金 A2類 Acc 美元",
             "LU0070992663": "駿利亨德森遠見環球科技基金 A2類 Acc 美元",
             "LU0327786744": "亨德森遠見中國躍升基金 A2類 Acc 美元",
             "LU0327786827": "亨德森遠見中國躍升基金 A1 Inc 美元",
             "LU0572944774": "亨德森遠見中國躍升基金 A2類 Acc 歐元",
             "LU0622223799": "駿利亨德森遠見亞洲增長基金 A2類 Acc 歐元",
             "LU0209157733": "駿利亨德森遠見泛歐股票基金 A1類 Inc 歐元",
             "LU0976556935": "亨德森遠見日本小型公司基金 A2類 美元 (對沖)",
             "HK0000204534": "弘收人民幣債券基金 2A Acc USD",
             "HK0000204559": "弘收人民幣債券基金 2B Acc RMB",
             "HK0000421419": "弘收高收益波幅管理債券基金 2A 累積（美元）",
             "HK0000421435": "弘收高收益波幅管理債券基金 2B 累積（人民幣）",
             "LU0028119526": "景順日本小型企業基金 A類 Acc 日圓",
             "LU0028118809": "景順泛歐洲基金 A類 Acc 歐元",
             "LU0028119013": "景順全歐洲企業基金 A類 Acc 歐元",
             "LU0123357419": "景順能源基金 A類 Acc 美元",
             "LU0367026217": "景順亞洲平衡基金 A類 Acc 美元",
             "LU0028120375": "景順新興歐洲股票基金 A類 Acc 美元",
             "LU0267985231": "景順泛歐洲基金 A類 Dis 歐元",
             "LU0267985660": "景順英國高質債券基金 A類 Dis 英鎊",
             "LU0267983889": "景順印度股票基金 A類 Dis 美元",
             "LU0823038988": "東方匯理系列基金亞洲智選基金 A2U類 Acc 美元",
             "LU0839533063": "東方匯理系列基金環球債券基金 A2U類 Acc 美元",
             "LU0823038715": "東方匯理系列基金 - 東協焦點市場基金 A2U類 Acc 美元",
             "LU0823045413": "東方匯理系列基金印度基金A2U類 Acc 美元",
             "LU0823046494": "東方匯理系列基金 - 拉丁美洲股票基金  A2U類 Acc 美元",
             "LU0823040885": "東方匯理系列基金 - 新興市場內需基金 A2U類 Acc 美元",
             "LU0823042071": "東方匯理系列基金 - 環球農業基金 A2U類 Acc 美元",
             "LU0568620560": "東方匯理系列基金歐元貨幣市場基金 AE類 Acc 歐元",
             "LU0568621618": "東方匯理系列基金美元貨幣市場基金 AU類 Acc 美元",
             "LU0839533220": "東方匯理系列基金環球債券基金 A2U類 Dis 美元",
             "LU0823039010": "東方匯理系列基金亞洲智選基金 A2U類 Dis 美元",
             "LU0823047385": "東方匯理系列基金中東北非基金A2U類 Acc 美元",
             "LU0028121183": "景順美元極短期債券基金 A類 Acc 美元",
             "LU0075112721": "景順亞洲機遇股票基金 A類 Acc 美元",
             "LU0048816135": "景順大中華基金 A類 Acc 美元",
             "LU0052864419": "景順消閒基金 A類 Acc 美元",
             "LU0149503202": "景順美國藍籌指標增值基金 A類 Acc 美元",
             "LU0119750205": "景順歐洲指標增值基金 A類 Acc 歐元",
             "LU0275062247": "景順新興貨幣債券基金 A類 Acc 美元",
             "LU0334857355": "景順亞洲富強基金 A類 Acc 美元",
             "LU0367025839": "景順天下地產收益基金 A類 Dis 美元",
             "LU0367024519": "景順能源基金 A類 Acc 歐元 (對沖)",
             "LU0505655562": "景順金礦基金 A類 Acc 美元",
             "LU0503256017": "景順拉丁美洲股票基金A類 Acc 歐元 (對沖)",
             "LU0505656297": "景順拉丁美洲股票基金A類 Acc 美元",
             "LU0275062080": "景順新興貨幣債券基金 A類 MDis 美元",
             "LU0100597557": "景順美元極短期債券基金 C類 Acc 美元",
             "LU0607514717": "景順日本股票優勢基金 A類 Acc 日圓",
             "LU0607522496": "景順日本小型企業基金 A類 Dis 美元",
             "LU0607513826": "景順美國價值股票基金 A類 Acc 美元",
             "LU0717748643": "景順中國智選股票基金 A類 Acc 美元",
             "LU0334858593": "景順泛歐洲基金 A類 Dis 美元",
             "LU0794788140": "景順美國高收益債券基金 A類 MDis 港元",
             "LU0794788066": "景順美國高收益債券基金 A類 MDis(Fixed) 美元",
             "LU0794787928": "景順美國高收益債券基金 A類 Dis 歐元 (對沖)",
             "LU0794787845": "景順美國高收益債券基金 A類 Acc 歐元 (對沖)",
             "LU0794787761": "景順美國高收益債券基金 A類 Acc 美元",
             "LU0717748213": "景順亞洲債券基金 A類 Acc 美元",
             "LU0607516688": "景順新興市場企業債券基金 A類 Acc 美元",
             "LU0607516332": "景順新興市場企業債券基金 A類 MD 美元",
             "LU0243957825": "景順歐洲企業債券基金 A類 Acc 歐元",
             "LU0248037169": "景順歐洲企業債券基金 A類 MD 歐元",
             "LU0607513230": "景順環球股票收益基金 A類 Acc 美元",
             "LU0607512778": "景順已發展國家中小型企業基金 A類 Acc 美元",
             "LU0267984937": "景順環球指標增值基金 A類 Dis 美元",
             "LU0607515367": "景順日本價值股票基金 A類 Acc 日圓",
             "LU0267986122": "景順泛歐洲股票收益基金 A類 Acc 歐元",
             "LU0243957239": "景順泛歐洲收益策略基金 A類 Acc 歐元",
             "LU1075211356": "景順歐洲指標增值基金 A類 Acc 美元 (對沖)",
             "LU1097691858": "景順全歐洲企業基金 A類 Acc 美元 (對沖)",
             "HK0000395928": "景順一帶一路債券基金 A類 MDis 港元",
             "HK0000395894": "景順一帶一路債券基金 A類 Acc 美元",
             "HK0000395902": "景順一帶一路債券基金 A類 MDis 美元",
             "LU1775947333": "景順東協基金 A類 Dis 美元",
             "LU1775951525": "景順亞洲動力基金 A類 Dis 美元",
             "LU1775961243": "景順歐洲大陸企業基金 A類 Dis 美元",
             "LU1775952507": "景順開發中市場基金 A類 Dis 美元",
             "LU1775982595": "景順健康護理基金 A類 Dis 美元",
             "LU1775975201": "景順環球企業基金 A類 Dis 美元",
             "LU0794789627": "景順美國股票基金 A類 Dis 美元",
             "LU1489827839": "景順日本股息增長基金 A類 AD 美元",
             "LU1775958025": "景順韓國基金 A類 Dis 美元",
             "LU1775965582": "景順中國基金 A類 Dis 美元",
             "LU1775964932": "景順中國基金 A類 Acc 歐元 (對沖)",
             "LU1775955278": "景順新興市場債券基金 A類 MDis 美元",
             "LU1775955435": "景順新興市場債券基金 A類 MDis 港元",
             "LU1775955864": "景順新興市場債券基金 A類 SDis 美元",
             "LU1775968685": "景順環球高收益債券基金 A類 MDis 港元",
             "LU1775969659": "景順環球高收益債券基金 A類 Dis 美元",
             "LU0085394566": "宏利環球基金 - 新興東歐基金 A類 Dis 美元",
             "LU0011869814": "宏利環球基金 - 日本增長基金 A類 Dis 美元",
             "LU0085394640": "宏利環球基金 - 中華威力基金 A類 Dis 美元",
             "LU0196878994": "宏利環球基金 - 中華威力基金 AA類 Dis 美元",
             "LU0196876865": "宏利環球基金 - 新興東歐基金 AA類 Dis 美元",
             "LU0011869731": "宏利環球基金 - 歐洲增長基金 A類 Dis 美元",
             "LU0274383263": "宏利環球基金 - 印度股票基金 AA類 Acc 美元",
             "LU0314103473": "宏利環球基金 - 土耳其股票基金 AA類  Dis 美元",
             "LU0278409577": "宏利環球基金 - 環球資源基金 AA類 Acc 美元",
             "LU0278409734": "宏利環球基金 - 臺灣股票基金 AA類 Dis 美元",
             "LU0274383776": "宏利環球基金 - 美國小型公司基金 AA類 Acc 美元",
             "LU0274383693": "宏利環球基金 - 拉丁美洲股票基金 AA類 Dis 美元",
             "LU0278409817": "宏利環球基金 - 美國債券基金 AA類 Dis 美元",
             "LU0386017924": "宏利環球基金 - 亞洲威力派息股票基金 AA類 Dis 美元",
             "LU0278410153": "宏利環球基金 - 美國特別機會基金 AA類 Dis 美元",
             "KYG5800M1050": "宏利盈進基金SPC - 中國A股獨立資產組合 AA類 Acc 美元",
             "KYG5800M1399": "宏利盈進基金SPC - 人民幣債券獨立資產組合 AA類 Acc 美元",
             "LU0314109678": "宏利環球基金 - 巨龍增長基金 AA類 Dis 港元",
             "LU0274383008": "宏利環球基金 - 亞洲小型公司基金 AA類 Dis 美元",
             "LU0507748050": "宏利環球基金 - 亞洲總回報基金 AA類 Inc 美元",
             "LU0314104364": "宏利環球基金 - 美洲增長基金 AA類 Acc 美元",
             "LU0314105171": "宏利環球基金 - 亞洲股票基金 AA類 Dis 美元",
             "LU0314106062": "宏利環球基金 - 歐洲增長基金 AA類 Dis 美元",
             "LU0278409221": "宏利環球基金 - 環球房地產基金 AA類 Dis 美元",
             "LU0357321016": "宏利環球基金 - 康健護理基金 AA類 Acc 美元",
             "LU0314106906": "宏利環球基金 - 環球股票基金 AA類 Dis 美元",
             "LU0314107540": "宏利環球基金 - 日本增長基金 AA類 Dis 美元",
             "LU0386018732": "宏利環球基金 - 策略收益基金 AA類 Dis 美元",
             "LU0011850392": "貝萊德全球基金 - 新興歐洲基金 A2類 Acc 歐元",
             "LU0047713382": "貝萊德全球基金 - 新興市場基金 A2類 Acc 美元",
             "LU0072463663": "貝萊德全球基金 - 拉丁美洲基金 A2類 Acc 美元",
             "LU0006061385": "貝萊德全球基金 - 環球政府債券基金 A2類 Acc 美元",
             "LU0050372472": "貝萊德全球基金 - 歐元債券基金 A2 類Acc 歐元",
             "LU0171280430": "貝萊德全球基金 - 歐洲基金 A2類 Acc 美元",
             "LU0171273575": "貝萊德全球基金 - 新興歐洲基金 A2類 Acc 美元",
             "LU0055631609": "貝萊德全球基金 - 世界黃金基金 A2類 Acc 美元",
             "LU0075056555": "貝萊德全球基金 - 世界礦業基金 A2類 Acc 美元",
             "LU0006061419": "貝萊德全球基金 - 美元貨幣基金 A2類 Acc 美元",
             "LU0006061252": "貝萊德全球基金 - 日本中小型企業特別時機基金 A2類 Acc 美元",
             "LU0035112944": "貝萊德全球基金 - 太平洋股票基金 A2 類Acc 美元",
             "LU0122376428": "貝萊德全球基金 - 世界能源基金 A2類 Acc 美元",
             "LU0171277485": "貝萊德全球基金 - 歐元市場基金 A2 類 Acc 美元",
             "LU0011850046": "貝萊德全球基金 - 環球遠見股票基金 A2 類Acc 美元",
             "LU0072462343": "貝萊德全球基金 - 亞洲巨龍基金 A2類 Acc 美元",
             "LU0171281750": "貝萊德全球基金 - 歐洲價值型基金A2 類Acc 美元",
             "LU0054578231": "貝萊德全球基金 - 環球小型企業基金 A2 類美元",
             "LU0171305526": "貝萊德全球基金 - 世界黃金基金 A2類 Acc 歐元",
             "LU0172157280": "貝萊德全球基金 - 世界礦業基金 A2類 Acc 歐元",
             "LU0046676465": "貝萊德全球基金 - 美元高收益債券基金 A2類 Acc 美元",
             "LU0056508442": "貝萊德全球基金 - 世界科技基金 A2類 Acc 美元",
             "LU0106831901": "貝萊德全球基金 - 世界金融基金A2 類Acc 美元",
             "LU0072462426": "貝萊德全球基金 - 環球資產配置基金 A2類 Acc 美元",
             "LU0122379950": "貝萊德全球基金 - 世界健康科學基金 A2類 Acc 美元",
             "LU0171284937": "貝萊德全球基金 - 環球高收益債券基金 A2類 Acc 美元",
             "LU0124384867": "貝萊德全球基金 - 永續能源基金 A2類 Acc 美元",
             "LU0432365988": "貝萊德全球基金 - 歐元貨幣基金 A2類 Acc 歐元",
             "LU0171283459": "貝萊德全球基金 - 環球資產配置基金 A2類 Acc 歐元",
             "LU0171301533": "貝萊德全球基金 - 世界能源基金 A2類 Acc 歐元",
             "LU0171275786": "貝萊德全球基金 - 新興市場基金 A2類 Acc 歐元",
             "LU0171289498": "貝萊德全球基金 - 拉丁美洲基金 A2類 Acc 歐元",
             "LU0200680600": "貝萊德全球基金 - 新興市場債券基金 A2類 Acc 美元",
             "LU0171289902": "貝萊德全球基金 - 可持續能源基金 A2類 Acc 歐元",
             "LU0171311680": "貝萊德全球基金 - 世界科技基金 A2類 Acc 英鎊",
             "LU0093503810": "貝萊德全球基金 - 歐元短期債券基金A2 類Acc  歐元",
             "LU0212924517": "貝萊德全球基金 - 日本靈活股票基金A2 類Acc 美元",
             "LU0248272758": "貝萊德全球基金 - 印度基金 A2類 Acc 美元",
             "LU0072461881": "貝萊德全球基金 - 美國價值型基金 A2類 Acc 美元",
             "LU0171279184": "貝萊德全球基金 - 歐元債券基金 A2 類Acc 美元",
             "LU0093504206": "貝萊德全球基金 - 環球高收益債券基金 A2類 Acc 歐元 (對沖)",
             "LU0224105477": "貝萊德全球基金 - 歐陸靈活股票基金A2 類Acc  歐元",
             "LU0011846440": "貝萊德全球基金 - 歐洲基金 A2類 Acc 歐元",
             "LU0171276677": "貝萊德全球基金 - 歐洲特別時機基金 A2類 Acc 美元",
             "LU0063729296": "貝萊德全球基金 - 亞洲老虎債券基金 A2類 Acc 美元",
             "LU0184696937": "貝萊德全球基金 - 世界債券基金 A2類 Acc 美元",
             "LU0171289738": "貝萊德全球基金 - 拉丁美洲基金 A2類 Acc 英鎊",
             "LU0359201612": "貝萊德全球基金 - 中國基金 A2類 Acc 美元",
             "LU0238689110": "貝萊德全球基金 - 環球動力股票基金A2 類Acc 美元",
             "LU0171304719": "貝萊德全球基金 - 世界金融基金A2 類Acc  歐元",
             "LU0278470058": "貝萊德全球基金 - 新興市場本地貨幣債券基金 A2 類Acc 美元",
             "LU0172419151": "貝萊德全球基金 - 美元高收益債券基金 A3類 MDis 美元",
             "LU0326422176": "貝萊德全球基金 - 世界能源基金 A2類 Acc 歐元 (對沖)",
             "LU0172393414": "貝萊德全球基金 - 亞洲老虎債券基金 A3類 MDis 美元",
             "LU0171310443": "貝萊德全球基金 - 世界科技基金 A2類 Acc 歐元",
             "LU0154236417": "貝萊德全球基金 - 美國靈活股票基金A2 類Acc 美元",
             "LU0385154629": "貝萊德全球基金 - 營養科學基金 A2類 Acc 美元",
             "LU0414403419": "貝萊德全球基金 - 亞太股票入息基金 A2類 Acc 美元",
             "LU0006061336": "貝萊德全球基金 - 美國中小型企業特別時機基金 A2類 Acc 美元",
             "LU0096258362": "貝萊德全球基金 - 美元債券基金 A2類 Acc 美元",
             "LU0248271941": "貝萊德全球基金 - 印度基金 A2類 Acc 歐元",
             "LU0097036916": "貝萊德全球基金 - 美國增長型基金A2 類Acc 美元",
             "LU0096258446": "貝萊德全球基金 - 美國政府房貸債券基金 A2類 Acc 美元",
             "LU0172418690": "貝萊德全球基金 - 美國政府房貸債券基金 A3類 MDis 美元",
             "LU0788109634": "貝萊德全球基金 - 環球企業債券基金 A6類 MDis (Stable) 美元",
             "LU0578942376": "貝萊德全球基金 - 美元高收益債券基金 A3類 MDis 澳元 (對沖)",
             "LU0249411835": "貝萊德全球基金 - 日本中小型企業特別時機基金 A2類 Acc 日圓",
             "LU0093502762": "貝萊德全球基金 - 歐元市場基金 A2 類Acc  歐元",
             "LU0072462186": "貝萊德全球基金 - 歐洲價值型基金A2 類Acc  歐元",
             "LU0249410860": "貝萊德全球基金 - 日本靈活股票基金A2 類Acc 日元",
             "LU0265550359": "貝萊德全球基金 - 環球股票收益進昇基金A2 類Acc 美元",
             "LU0011847091": "貝萊德全球基金 - 英國基金 A2類Acc英鎊",
             "LU0651946864": "貝萊德全球基金 - 新興市場股票入息基金A2 類Acc 美元",
             "LU0545039389": "貝萊德全球基金 - 環球股票入息基金A2 類Acc 美元",
             "LU0612318385": "貝萊德全球基金 - 天然資源增長入息基金A2 類Acc 美元",
             "LU0162658883": "貝萊德全球基金 - 歐元企業債券基金A2 類Acc  歐元",
             "LU0425308086": "貝萊德全球基金 - 通脹掛?債券基金A2 類Acc 美元",
             "LU0093503497": "貝萊德全球基金 - ESG多元資產基金A2 類Acc  歐元",
             "LU0784385840": "貝萊德全球基金 - 環球多元資產入息基金A2 類Acc 美元",
             "LU0278466700": "貝萊德全球基金 - 環球債券特別時機基金A2 類Acc 美元",
             "LU1003076939": "貝萊德全球基金 - 環球債券特別時機基金A3 類Acc 美元",
             "LU0171293334": "貝萊德全球基金 - 英國基金 A2類Acc美元",
             "LU0738912566": "貝萊德全球基金 - 美元高收益債券基金 A6類 MDis 美元",
             "LU0764618640": "貝萊德全球基金 - 環球高收益債券基金 A6類 MDis 美元",
             "LU0871640040": "貝萊德全球基金 - 環球高收益債券基金 A8類 MDis 澳元 (對沖)",
             "LU1023058172": "貝萊德全球基金 - 世界能源基金 A2類 澳元(對沖)",
             "LU0841155764": "貝萊德全球基金 - 亞洲老虎債券基金 A3類澳元(對沖)",
             "LU0871639620": "貝萊德全球基金 - 亞洲老虎債券基金 A8類澳元(對沖)",
             "LU1023057109": "貝萊德全球基金 - 中國基金 A2類 澳元(對沖)",
             "LU1023062109": "貝萊德全球基金 - 歐洲特別時機基金 A2類 澳元 (對沖)",
             "LU1023056804": "貝萊德全球基金 - 亞洲巨龍基金 A2類 澳元 (對沖)",
             "LU1023057877": "貝萊德全球基金 - 拉丁美洲基金 A2類 澳元 (對沖)",
             "LU0562822386": "貝萊德全球基金 - 歐洲股票入息基金 A2類 Acc 歐元",
             "LU0154234636": "貝萊德全球基金 - 歐洲特別時機基金 A2類 Acc 歐元",
             "LU0526926950": "貝萊德全球基金 - 歐洲基金 A2類 美元 對沖",
             "LU1564329032": "貝萊德全球基金 - 動力高息基金 A2 USD",
             "LU0496654236": "貝萊德全球基金 - 亞洲老虎債券基金 A3類 MDis 港元 (對沖)",
             "LU0784395997": "貝萊德全球基金 - 亞洲老虎債券基金 A6類 MDis 港元 (對沖)",
             "LU1133085917": "貝萊德全球基金 - 環球多元資產入息基金 A6類 MDis 歐元 (對沖)",
             "LU0111491469": "法巴歐洲賞息股票基金 經典 Cap 歐元",
             "LU0265266980": "法巴巴西股票基金 經典 Cap 美元",
             "LU0265267285": "法巴巴西股票基金 經典 Dis 美元",
             "LU0075933415": "法巴拉丁美洲股票基金 經典 Cap 美元",
             "LU0249332619": "法巴全球通脹掛鈎債券基金 經典 Cap 歐元",
             "LU0249332452": "法巴全球通脹掛鈎債券基金 經典 Dis 歐元",
             "LU0066794719": "法巴歐元區中型企業股票基金 經典 Cap 歐元",
             "LU0066794479": "法巴歐元區中型企業股票基金 經典 Dis 歐元",
             "LU0111491626": "法巴歐洲賞息股票基金 經典 Dis 歐元",
             "LU0823379622": "法巴亞洲(日本除外)債券基金 經典 Cap 美元",
             "LU0823413587": "法巴全球新興市場股票基金經典 Cap 美元",
             "LU0823389423": "法巴全球新興市場優選債券基金經典 H Cap 歐元",
             "LU0823431720": "法巴俄羅斯股票基金經典 Cap 歐元",
             "LU0823431563": "法巴俄羅斯股票基金經典美元 Cap 美元",
             "LU0823403190": "法巴新興歐洲股票基金經典 Cap 美元",
             "LU0823428932": "法巴印度股票基金經典 Cap 美元",
             "LU0823389852": "法巴全球新興市場優選債券基金經典 Cap 美元",
             "LU0823411888": "法巴主要消費品創新股票基金經典 Cap 美元",
             "LU0823411961": "法巴主要消費品創新股票基金經典 Dis 歐元",
             "LU0823426308": "法巴中國股票基金經典 Cap 美元",
             "LU0823388615": "法巴全球高收益債券基金經典 經典 Cap 歐元",
             "LU0823434583": "法巴美國增長股票基金經典 Cap 美元",
             "LU0154245756": "法巴美國中型企業股票基金經典 Cap 美元",
             "LU0823414478": "法巴能源創新股票基金 經典 Cap 美元",
             "LU0823414635": "法巴能源創新股票基金 經典 Cap 歐元",
             "LU0823421333": "法巴資訊科技創新股票基金 經典 Cap 美元",
             "LU0823421416": "法巴資訊科技創新股票基金 經典 Dis 美元",
             "LU0823431720": "法巴俄羅斯股票基金經典 Cap 美元",
             "LU0130103400": "法盛（盧森堡）國際基金 I - 漢瑞斯全球股票基金 R/A類 Acc 美元",
             "LU0147944259": "法盛（盧森堡）國際基金 I - 漢瑞斯全球股票基金 R/A類 Acc 歐元",
             "LU0389358952": "法盛（盧森堡）國際基金 I - 漢瑞斯全球股票基金 R/A類 Acc 英鎊",
             "LU0029874905": "鄧普頓新興市場基金 A類 Dis 美元",
             "LU0128525929": "鄧普頓環球美元基金 A類 Acc 美元",
             "LU0065014192": "富蘭克林高息基金 A類 MDis 美元",
             "LU0052767562": "富蘭克林美元短期貨幣市場基金 A類 MDis 美元",
             "LU0029872446": "富蘭克林美國政府基金 A類 MDis 美元",
             "LU0078277505": "鄧普頓東歐基金 A類 Acc 歐元",
             "LU0029865408": "鄧普頓拉丁美洲基金 A類 Dis 美元",
             "LU0029876355": "鄧普頓新興市場債券基金 A類 QDis 美元",
             "LU0152981543": "鄧普頓環球債券基金 A類 MDis 歐元",
             "LU0052750758": "鄧普頓中國基金 A類 Acc 美元",
             "LU0128522157": "鄧普頓亞洲增長基金 A類 Acc 美元",
             "LU0070302665": "富蘭克林互惠美國價值基金 A類 Acc 美元",
             "LU0109394709": "富蘭克林生物科技新領域基金 A類 Acc 美元",
             "LU0093666013": "鄧普頓歐元區基金 A類 Acc 歐元",
             "LU0029871042": "鄧普頓環球債券基金 A類 MDis 美元",
             "LU0109392836": "富蘭克林科技基金 A類 Acc 美元",
             "LU0098860793": "富蘭克林入息基金 A類 MDis 美元",
             "IE0032578035": "富蘭克林浮動息率基金 A類 Dis 美元",
             "LU0109981661": "富蘭克林互惠歐洲基金 A類 Acc 美元",
             "LU0109395268": "富蘭克林歐元高息基金 A類 YDis 歐元",
             "LU0029875118": "鄧普頓亞洲增長基金 A類 Dis 美元",
             "LU0128522744": "鄧普頓新興市場基金 A類 Acc 美元",
             "LU0128526141": "鄧普頓環球小型公司基金 A Acc 美元",
             "LU0052756011": "鄧普頓環球均衡增長基金 A類 QDis 美元",
             "LU0170475585": "鄧普頓環球總收益基金 A類 MDis 美元",
             "LU0029864427": "鄧普頓環球美元基金 A類 Dis 美元",
             "LU0211326755": "鄧普頓環球入息基金 A類 Acc 美元",
             "LU0128525689": "鄧普頓環球均衡增長基金 A類 Acc 美元",
             "LU0140363002": "富蘭克林互惠歐洲基金 A類 Acc 歐元",
             "LU0229945570": "鄧普頓新興四強基金 A類 Acc 美元",
             "LU0211331839": "富蘭克林互惠環球探索基金 A類 Acc 美元",
             "LU0170475312": "鄧普頓環球總收益基金 A類 Acc 美元",
             "LU0093669546": "富蘭克林歐元政府債券基金 A類 YDis 歐元",
             "LU0231793349": "鄧普頓東歐基金 A類 Acc 美元",
             "LU0211327993": "鄧普頓環球股票入息基金 A類 Acc 美元",
             "LU0229949994": "鄧普頓亞洲債券基金 A類 Acc 美元",
             "LU0229946628": "鄧普頓新興四強基金 A類 Acc 歐元",
             "LU0231203729": "富蘭克林印度基金 A類 Acc 美元",
             "LU0138075311": "富蘭克林歐洲中小型公司增長基金 A類 Acc 歐元",
             "LU0128526570": "鄧普頓拉丁美洲基金 A類 Acc 美元",
             "LU0300738514": "鄧普頓新興市場小型公司基金 A類 Acc 美元",
             "LU0260870661": "鄧普頓環球總收益基金 A類 Acc 歐元",
             "LU0252652382": "鄧普頓環球債券基金 A類 Acc 美元",
             "LU0294219869": "鄧普頓環球債券基金 A類 Acc 歐元 (對沖1)",
             "LU0352132103": "富蘭克林中東北非基金 A類 Acc 美元",
             "LU0229950067": "鄧普頓亞洲債券基金 A類 MDis 美元",
             "LU0229940001": "鄧普頓亞洲增長基金 A類 Acc 歐元",
             "LU0260871552": "富蘭克林歐洲中小型公司增長基金 A類 Acc 美元",
             "LU0476943963": "鄧普頓環球總收益基金 A類 Acc 港元",
             "LU0390135332": "鄧普頓亞洲小型公司基金 A類 Acc 美元",
             "LU0229948087": "富蘭克林環球物業收益基金 A類 Acc 美元",
             "LU0476943617": "鄧普頓環球債券基金 A類 MDis 港元",
             "LU0476943708": "鄧普頓環球總收益基金 A類 MDis 港元",
             "LU0109391861": "富蘭克林美國機會基金 A類 Acc 美元",
             "LU0441901922": "鄧普頓新興市場債券基金 A類 MDis 美元",
             "LU0543330483": "鄧普頓亞洲增長基金 A類 Acc 港元",
             "LU0543330566": "鄧普頓新興四強基金 A類 Acc 港元",
             "LU0608807433": "鄧普頓新興市場動力入息基金",
             "HK0000127438": "鄧普頓中國機會基金 A類 Acc 美元",
             "HK0000127776": "鄧普頓中國機會基金 A類 Acc 港元",
             "LU0708994347": "鄧普頓新興市場債券基金 A類 MDis 港元",
             "LU0352132285": "富蘭克林中東北非基金 A類 Acc 歐元",
             "LU0708995070": "富蘭克林美國股票基金 A類 Acc 港元",
             "LU0708994859": "鄧普頓環球美元基金 A類 Acc 港元",
             "LU0536402737": "鄧普頓環球總收益基金 A類 MDis 澳元 (對沖)",
             "HK0000283264": "鄧普頓智選環球股票基金 A類 Acc 美元",
             "HK0000283280": "鄧普頓智選環球股票基金 A類 Acc H1-人民幣",
             "HK0000283298": "富蘭克林智選環球多元資產入息基金 A類 MDis 美元",
             "HK0000283314": "富蘭克林智選環球多元資產入息基金 A類 MDis H1-人民幣",
             "CNE1000025B5": "富蘭克林國海潛力組合混合型證券投資基金 H類-人民幣",
             "HK0000283306": "富蘭克林智選環球多元資產入息基金 A類 MDis 港元",
             "HK0000283272": "鄧普頓智選環球股票基金 A類 Acc 港元",
             "LU0348825331": "安聯中國股票基金 A類 Dis 美元",
             "LU0348751388": "安聯日本股票基金 - A類Dis美元",
             "LU0348756692": "安聯韓國股票基金 A類 Dis 美元",
             "LU0348783233": "安聯東方入息基金 A類 Dis 美元",
             "LU0348798264": "安聯泰國股票基金 A類 Dis 美元",
             "LU0348735423": "安聯香港股票基金 A類 Dis 美元",
             "LU0348744763": "安聯印尼股票基金 A類 Dis 美元",
             "LU0348723411": "安聯全球高成長科技基金 A類 Dis 美元",
             "LU0348766576": "安聯小龍基金 A類 Dis 美元",
             "LU0348805143": "安聯老虎基金 A類 Dis 美元",
             "LU0348814723": "安聯總回報亞洲股票基金 A類 Dis 美元",
             "LU0348784397": "安聯東方入息基金 AT類 Acc 美元",
             "LU0348786921": "安聯東方入息基金 P類 Dis 美元",
             "LU0348767384": "安聯小龍基金 AT類 Acc 美元",
             "LU0348816934": "安聯總回報亞洲股票基金 AT類 Acc 美元",
             "LU0342689089": "安聯環球農產品趨勢基金 AT類 Acc 美元",
             "LU0342688198": "安聯環球農產品趨勢基金 A類 Dis 歐元",
             "LU0293314216": "安聯全球新興市場高息股票基金 AT類 Acc 美元",
             "LU0293313325": "安聯全球新興市場高息股票基金 AT類 Acc 歐元",
             "IE00B11XZ657": "PIMCO 環球實質回報基金 E類 Acc 美元",
             "IE00B11XZ988": "PIMCO 總回報債券基金 E類 Acc 美元",
             "IE00B2R34T20": "PIMCO 環球投資級別債券基金 E類 Inc 美元 (QDis)",
             "IE00B3K7XK29": "PIMCO 環球投資級別債券基金 E類 Acc 美元",
             "IE00B11XYX59": "PIMCO 新興市場債券基金 E類 Acc 美元",
             "IE00B193ML14": "PIMCO 環球高孳息債券基金 E類 Inc 美元 (QDis)",
             "LU0348788117": "安聯新興亞洲股票基金A類 Dis 美元",
             "IE00B0M2Y900": "PIMCO 總回報債券基金 E類 Inc 美元 (QDis)",
             "IE00B1D7YK27": "PIMCO 多元化入息基金 E類 Acc 美元",
             "LU0256863811": "安聯美國股票基金 A類 Dis 美元",
             "IE00B464Q616": "PIMCO 新興亞洲債券基金 E類 Inc 美元 (MDis)",
             "LU0674994412": "安聯美元高收益基金 AT類 Acc 美元",
             "LU0634319403": "安聯香港股票基金 AT類 Acc 港元",
             "IE00B193MK07": "PIMCO 多元化入息基金 E類 Inc 美元",
             "LU0516397667": "安聯美元高收益基金 AM類 Dis 美元",
             "IE00B3Y5VT74": "PIMCO 多元化入息基金 MRetl類 Inc 美元",
             "IE00B11XZ434": "PIMCO 環球投資級別債券基金 E類 Acc 歐元 (對沖)",
             "LU0300736062": "富蘭克林天然資源基金 A類 Acc 美元",
             "LU0098860363": "富蘭克林美國股票基金 A類 Acc 美元",
             "LU0498741114": "富蘭克林黃金及貴金屬基金 A類 Acc 港元",
             "LU0496367417": "富蘭克林黃金及貴金屬基金 A類 Acc 美元",
             "IE00B11XZB05": "PIMCO 總回報債券基金 E類 Acc 歐元 (對沖)",
             "IE00B0MD9S72": "PIMCO 新興市場債券基金 E類 Inc 美元 (QDis)",
             "IE00B1D7YM41": "PIMCO 環球高孳息債券基金 E類 Acc 美元",
             "LU0396098781": "安聯中國多元入息基金 AT類 Acc 美元",
             "LU0689472784": "安聯收益及增長基金AT類 Acc 美元",
             "LU0820561818": "安聯收益及增長基金AM類 Dis 美元",
             "LU0820561909": "安聯收益及增長基金AM類 Dis 港元",
             "LU0256839191": "安聯歐洲成長基金 A類 Dis 歐元",
             "LU0256839274": "安聯歐洲成長基金 AT類 Acc 歐元",
             "LU0706718086": "安聯亞洲靈活債券基金 AM類 Dis 港元",
             "LU0745992734": "安聯亞洲靈活債券基金 AM類 Dis 美元",
             "LU0745992494": "安聯亞洲靈活債券基金 AT類 Acc 美元",
             "LU0648948544": "安聯亞洲多元入息基金 AM類 Dis 港元",
             "LU0488056044": "安聯亞洲多元入息基金 AM類 Dis 美元",
             "LU0204485717": "安聯亞太股票基金 A類 Dis 美元",
             "LU0101244092": "安聯全球股票基金AT類 Acc 美元",
             "LU0384037296": "安聯亞洲多元入息基金 AT類 Acc 美元",
             "LU0204480833": "安聯亞太股票基金 A類 Dis 歐元",
             "LU0101257581": "安聯全球股票基金 AT類 Acc 歐元",
             "LU0561508036": "安聯中國股票基金 A類 Dis 港元",
             "LU0348827113": "安聯中國股票基金 AT類 Acc 美元",
             "LU0589944569": "安聯新興亞洲股票基金AT類 Acc 港元",
             "LU0820562030": "安聯收益及增長基金AM類 Dis H2-澳元對沖",
             "LU0820562113": "安聯收益及增長基金AM類 Dis H2-加元對沖",
             "LU0913601281": "安聯收益及增長基金AM類 Dis H2-歐元對沖",
             "LU0820562386": "安聯收益及增長基金AM類 Dis H2-英鎊對沖",
             "LU0943347566": "安聯收益及增長基金AM類 Dis H2-新加坡元對沖",
             "LU0761598746": "安聯美元高收益基金 AM類 Dis 新加坡元",
             "LU0648978533": "安聯美元高收益基金 AM類 Dis 港元",
             "LU0674994503": "安聯美元高收益基金 AT類 Acc 港元",
             "LU0971552673": "安聯歐洲股息基金 AM類 Dis H2-美元(對沖)",
             "LU0971552830": "安聯歐洲股息基金 AM類 Dis H2-港元(對沖)",
             "HK0000211927": "安聯寰通收益及增長基金  AM Dis H2-人民幣 (對沖)",
             "LU0649033221": "安聯美元高收益基金 AM類 Dis H2-澳元",
             "LU0815945547": "安聯港元收益基金 AM類 Dis 港元",
             "LU0880094791": "安聯港元收益基金 AT類 Acc 港元",
             "LU0857590862": "安聯歐洲成長基金 A類 Acc 美元 (對沖)",
             "LU0994605391": "安聯收益及增長基金AM類 Dis H2-紐元對沖",
             "LU1400636814": "安聯歐洲收益及增長基金 AMg類 Dis 歐元",
             "LU1400636731": "安聯歐洲收益及增長基金 AMg類 Dis H2-澳元",
             "LU1400636574": "安聯歐洲收益及增長基金 AMg類 Dis H2-港元",
             "LU1400636491": "安聯歐洲收益及增長基金 AMg類 Dis H2-美元",
             "LU1282649901": "安聯動力亞洲高收益債券基金 AMg類 Dis 美元",
             "LU1282650073": "安聯動力亞洲高收益債券基金 AMg類 Dis 港元",
             "LU1282650156": "安聯動力亞洲高收益債券基金 AMg類 Dis H2-澳元",
             "LU1282650404": "安聯動力亞洲高收益債券基金 AMg類 Dis H2-加元",
             "LU1282650313": "安聯動力亞洲高收益債券基金 AMg類 Dis H2-英鎊",
             "LU1282650586": "安聯動力亞洲高收益債券基金 AMg類 Dis H2-新西蘭元",
             "LU1282650669": "安聯動力亞洲高收益債券基金 AMg類 Dis H2-新加坡元",
             "LU1311290768": "安聯動力亞洲高收益債券基金 AMg類 Dis H2-歐元",
             "IE00B92ZW543": "PIMCO GIS 收益基金 E類 Inc 港元",
             "IE00B7KFL990": "PIMCO GIS 收益基金 E類 Acc 美元",
             "IE00B8K7V925": "PIMCO GIS 收益基金 E類 Inc 美元",
             "IE00BD8DFW88": "PIMCO GIS 收益基金 E類 Inc 澳元對沖",
             "IE00B84J9L26": "PIMCO GIS 收益基金 E類 Acc 歐元對沖",
             "IE00B8N0MW85": "PIMCO GIS 收益基金 E類 Inc 歐元對沖",
             "LU1720051108": "安聯環球人工智能股票基金 AT Acc 港元",
             "LU1548497426": "安聯環球人工智能股票基金 AT Acc 美元",
             "LU0820562469": "安聯收益及增長基金AM類 Dis H2-人民幣對沖",
             "LU1997245177": "安聯神州A股基金 AT類 Acc 美元",
             "KYG9317Q1047": "惠理中華匯聚基金 Acc 美元",
             "HK0000288735": "惠理高息股票基金 A1類 Acc 美元",
             "KYG9317Q1120": "惠理中國大陸焦點基金 Acc 美元",
             "KYG9317M1033": "惠理中華新星基金 Acc 港元",
             "HK0000264884": "惠理價值基金 C類 Acc 美元",
             "KYG9318Y1061": "惠理臺灣基金 Acc 美元",
             "HK0000288743": "惠理高息股票基金 A2類 MDis 美元",
             "KYG9319N1097": "惠理大中華高收益債券基金 P類 Acc 美元",
             "KYG9319N1253": "惠理大中華高收益債券基金 P類 Acc 港元",
             "KYG9319N1337": "惠理大中華高收益債券基金 P類 MDis 港元",
             "HK0000264892": "惠理價值基金 C類 澳元 (對沖)",
             "HK0000288750": "惠理高息股票基金 A類 MDis 澳元 (對沖)",
             "HK0000288818": "惠理高息股票基金 A2類 MDis 人民幣 (非對沖類別)",
             "HK0000402450": "惠理亞洲總回報債券基金 A類 Acc 美元",
             "HK0000116340": "海通中華基金 Acc 港元",
             "HK0000098423": "海通中國人民幣收益基金 A類 Inc 人民幣",
             "LU0307460666": "瀚亞投資 - 中國股票基金 A類 Acc 美元",
             "LU0211977185": "瀚亞投資－大中華股票基金 A類 Acc 美元",
             "LU0307460823": "瀚亞投資－印尼股票基金 A類 Acc 美元",
             "LU0149983909": "瀚亞投資 - 美國優質債券基金 A類 Acc 美元",
             "LU0149982760": "瀚亞投資 - 美國特優級債券基金 A類 Acc 美元",
             "LU0154355936": "瀚亞投資 - 亞洲債券基金 A類 Acc 美元",
             "LU0163747925": "瀚亞投資－亞洲股票基金 A類 Acc 美元",
             "LU0315178854": "瀚亞投資－亞洲股票收入基金 A類 Acc 美元",
             "LU0588545730": "瀚亞投資－亞洲股票收入基金 ADM類 美元",
             "LU0795476463": "瀚亞投資－亞洲股票收入基金 AADM類 澳元 (對沖)",
             "LU0315179829": "瀚亞投資－亞洲當地債券基金 A類 Acc 美元",
             "LU0795475739": "瀚亞投資－亞洲當地債券基金 AADM類 澳元 (對沖)",
             "LU0428352859": "瀚亞投資－亞洲當地債券基金 ADM類 美元",
             "LU0289051731": "瀚亞投資 - 亞洲物業證券基金A類Acc美元",
             "LU0640798830": "瀚亞投資 - 中國股票基金 AH類 港元 (對沖)",
             "LU0259732245": "瀚亞投資－中印基金 A類 Acc 美元",
             "LU0640798327": "瀚亞投資－中印基金 AH類 港元(對沖)",
             "LU0640798244": "瀚亞投資－大中華股票基金 AH類 港元 (對沖)",
             "LU0307461987": "瀚亞投資－香港股票基金 A類 Acc 美元",
             "LU0640798756": "瀚亞投資－香港股票基金 AH類 港元 (對沖)",
             "LU0307460401": "瀚亞投資－印度股票基金 A類 Acc 美元",
             "LU0149984543": "瀚亞投資－美國高收益基金 A類 Acc 美元",
             "LU0795476117": "瀚亞投資－美國高收益基金 AADM類 澳元 (對沖)",
             "LU0428352420": "瀚亞投資－美國高收益基金 ADM類 美元",
             "LU0428352776": "瀚亞投資－亞洲債券基金 ADM類美元",
             "LU0811022283": "瀚亞投資－亞洲債券基金 AHDM 類港元",
             "LU0801099465": "瀚亞投資 - 亞洲高收益債券基金 A類美元",
             "LU0756523055": "瀚亞投資－亞洲高收益債券基金 ADM類美元",
             "LU0354059684": "瀚亞投資－全球通基金 A類美元",
             "LU1522347837": "瀚亞投資 - 亞洲低波幅股票基金 A類美元",
             "LU0640798160": "瀚亞投資 - 環球新興市場動力股票基金 A類 美元",
             "LU0170899867": "瀚亞投資 - 全球價值股票基金 A類 美元",
             "IE00B8HR5X72": "創凱富國債券基金 Ord類 Acc 美元",
             "IE00BG6MV421": "創凱亞太股票入息基金 Ord類 Acc 美元",
             "IE00B7TWVK27": "創凱中國股票基金 Ord類 Acc 美元",
             "IE00B3PHBL43": "創凱美國增長基金 Ord類 Acc 美元",
             "HK0000371796": "創凱香港單位信託系列 – 創凱數碼世紀基金 Ord Acc 美元",
             "IE00BKDK1M51": "創凱富國債券基金 Ord類 Inc (M) 美元",
             "IE00B12V2T05": "柏瑞環球基金 - 柏瑞歐洲新興股票基金 A類 Ret 美元",
             "IE00B12V2W34": "柏瑞環球新興市場債券基金 A類 美元",
             "IE00B0JY6N72": "柏瑞環球新興市場重點股票基金 A類",
             "IE00B0JY6M65": "柏瑞印度股票基金 A類 美元",
             "IE00B1B80R65": "柏瑞拉丁美洲股票基金 A類 美元",
             "HK0000073939": "柏瑞港元固定收益基金 港元",
             "HK0000073368": "柏瑞香港股票基金 港元",
             "IE00B2N6FJ21": "柏瑞環球策略收益基金 A類 美元",
             "IE00B12V2V27": "柏瑞亞洲﹝日本除外﹞小型公司股票基金 A類 美元",
             "IE0034235303": "柏瑞環球基金 - 柏瑞美國研究增值核心股票基金 A類 Ret 美元",
             "IE00B0VPN609": "柏瑞環球基金 - 柏瑞日本中小型公司股票基金 A類 Ret 美元",
             "IE0034235071": "柏瑞環球基金 - 柏瑞歐洲研究增值股票基金 A類 Ret 美元",
             "IE0030412666": "柏瑞環球基金 - 柏瑞歐洲小型公司股票基金 A1類 Ret 歐元",
             "IE0003895053": "柏瑞環球基金 - 柏瑞亞洲動態資產配置基金 L類 Ret 美元",
             "IE00B3QK8V11": "柏瑞環球基金 - 柏瑞環球新興市場當地貨幣債券基金 A類 Ret 美元",
             "IE0034235188": "柏瑞環球基金 - 柏瑞環球重點股票基金 A類 Ret 美元",
             "LU0260085492": "木星歐洲增長基金 L類 Acc 歐元",
             "LU0966834136": "木星歐洲增長基金 L類 Acc 美元 (對沖)",
             "LU0260086623": "木星歐洲機遇基金 L Acc 歐元",
             "LU0365089902": "木星印度精選基金 L類 Inc 美元",
             "LU0459992896": "木星動力債券基金 L類 Q Inc 歐元",
             "LU0522255313": "木星全球可換股證券基金 L類 Acc 歐元",
             "LU0522255669": "木星全球可換股證券基金 L類 Acc 美元 (對沖)",
             "LU0459992979": "木星動力債券基金 L類 QInc 美元 (對沖)",
             "LU0992293067": "木星動力債券基金 L類 Minc 美元 (對沖)",
             "HK0000181096": "大成中國靈活配置基金 A類 人民幣",
             "HK0000181112": "大成中國靈活配置基金 A類 港元",
             "HK0000181138": "大成中國靈活配置基金 A類 美元",
             "HK0000283249": "大成海外中國概念基金 A類 美元",
             "HK0000283223": "大成海外中國概念基金 A類 港元"}
    # score = 0
    # for x in range(1, 15):
    #     arg = "q%d" % x
    #     q = request.values.get(arg)
    #     score += int(q)

    q1 = request.values.get("q1")
    q2 = request.values.get("q2")
    q3 = request.values.get("q3")
    q4 = request.values.get("q4")
    q5 = request.values.get("q5")
    q6 = request.values.get("q6")
    q7 = request.values.get("q7")
    q8 = request.values.getlist("q8")
    q9 = request.values.get("q9")
    q10 = request.values.get("q10")
    q11 = request.values.get("q11")
    q12 = request.values.get("q12")
    q13 = request.values.getlist("q13")
    q14 = request.values.getlist("q14")
    # if q1!=None and q2!=None and q3!=None and q4!=None and q5!=None and q6!=None and q7!=None and q8!=[] and q9!=[]and q10!=[]:

    ## Calculate the result and transform it into an integer
    sum = int(q1) + int(q2) + int(q3) + int(q4) + int(q5) + int(q6) + int(q7) +  int(q9) + int(q10) + int(q11) + int(q12)
    ## Classify
    if sum in range(12, 17):
        level = 1
    elif sum in range(17, 22):
        level = 2
    elif sum in range(22, 27):
        level = 3
    elif sum in range(27, 31):
        level = 4
    elif sum in range(31, 35):
        level = 5
    elif sum in range(35, 39):
        level = 6
    elif sum in range(39, 41):
        level = 7
    elif sum in range(41, 43):
        level = 8
    elif sum in range(43, 45):
        level = 9
    elif sum in range(45, 48):
        level = 10
    else:
        level = 1


    from rpy2 import robjects
    robjects.r('''

library("xml2")
library("dplyr")
library("stringr")
library("rlist")
library("xts")
library("quantmod")
library("PortfolioAnalytics")
library("DEoptim")
library("ROI")
require("ROI.plugin.glpk")
require("ROI.plugin.quadprog")


filter<-function(data,sour,ac,gf,riskave){
    ###initialize
    ac_all<-c()
    gf_all<-c()

    risk_all<-c() #annual volatility
    outline_all<-data.frame()
    fund_num<-ncol(sour)/2

    outfund_all<-data.frame()
    sel_all<-c()
    data2<-data.frame()
    reorderfund_all<-data.frame()
    return_all<-c()
    sorted_return_all<-c()
    writefund_all<-data.frame()
    finalfund_all<-data.frame()


    ###select asset class
    for(i in 1:4){
        if(ac[i]>3){next}
        acfilter<-switch(i,match(data[which(data$Asset.Class == "Equity"), ][,1],data[,1]),
            match(data[which(data$Asset.Class == "Fixed Income"), ][,1],data[,1]),
            match(data[which(data$Asset.Class == "Mixed Allocation"), ][,1],data[,1]),
            match(data[which(data$Asset.Class == "Money Market"), ][,1],data[,1]))
        ac_all<-c(ac_all,acfilter)
    }

    ###select geographical focus
    for(i in 1:7){
        if(gf[i]>4){next}
        gffilter<-switch(i,match(data[which(data$Geographical.Focus == "Africa& Middle West Region"), ][,1],data[,1]),
            match(data[which(data$Geographical.Focus == "Asian Pacific Region"), ][,1],data[,1]),
            match(data[which(data$Geographical.Focus == "Greater China"), ][,1],data[,1]),
            match(data[which(data$Geographical.Focus == "International"), ][,1],data[,1]),
            match(data[which(data$Geographical.Focus == "Latin American Region"), ][,1],data[,1]),
            match(data[which(data$Geographical.Focus == "U.S."), ][,1],data[,1]))
        gf_all<-c(gf_all,gffilter)
    }

    ###first selected 
    fil<-intersect(gf_all,ac_all)
    cn<-max(index(fil))#total amount of funds we've got in the first selection

    ###continue to choose if first selected funds are less than 50

    while(cn<50){
        for(i in 1:7){
            if(gf[i]<5){next}
            gffilter<-switch(i,match(data[which(data$Geographical.Focus == "Africa& Middle West Region"), ][,1],data[,1]),
                match(data[which(data$Geographical.Focus == "Asian Pacific Region"), ][,1],data[,1]),
                match(data[which(data$Geographical.Focus == "European Region"), ][,1],data[,1]),
                match(data[which(data$Geographical.Focus == "Greater China"), ][,1],data[,1]),
                match(data[which(data$Geographical.Focus == "International"), ][,1],data[,1]),
                match(data[which(data$Geographical.Focus == "Latin American Region"), ][,1],data[,1]),
                match(data[which(data$Geographical.Focus == "U.S."), ][,1],data[,1]))
            gf_all<-c(gf_all,gffilter)
            fil<-intersect(gf_all,ac_all)
            cn<-max(index(fil))
            if(cn>50){break}
        }
    }




    for(k1 in fil){
        if(is.null(sour[2,(2*k1-1)])){break}
        if(as.Date(sour[1,(2*k1-1)])>="2014-12-01"){next}
        tmp<-as.character(sour[,(2*k1-1)])
        temp<-as.Date(tmp,format="%Y/%m/%d")
        #print(222)
        
        data1<-data.frame(temp,sour[,2*k1])
        data1<-na.omit(data1,data1[,1:2])
        data1<-xts(data1[,2],data1[,1])
        colnames(data1)<-colnames(sour[(2*k1-1)])
        return<-Return.calculate(data1)
        return_cu<-Return.cumulative(return)
        data2<-merge.xts(data2,data1)
        risk<-StdDev.annualized(return)#risk
        risk_all<-c(risk_all,risk)
    }
    fund_num<-ncol(data2)
    ###sort by volatility, and choose by input

    sorted_risk_all<-sort(risk_all,decreasing=FALSE) 
    reorder<-match(sorted_risk_all,risk_all)

    ###reform the initial data, ranking by volatility, 1 for the least volatility[1552*708]
    for(k in reorder){
        reorderfund<-data2[,(k)]
        reorderfund<-na.omit(reorderfund,reorderfund[,1])
        reorderfund_all<-merge.xts(reorderfund_all,reorderfund)
    }

    group_num = 5###客户风险接受程度划分组数
    itv<-ceiling((fund_num)/group_num)

    ###for every 风险接受程度, find the first 5 funds
    
    for(ins in 1:group_num){
        return_all<-c()
        sorted_return_all<-c()
        outfund_all<-c()
        #risk_all<-c()
        index_upper<-itv*ins
        if(ins==group_num)
        {
            index_upper<-fund_num
        }
        selected<-((ins-1)*itv+1):index_upper#because fund_num/10 might not be integer
        
        ###for every ins, 3 for instance, find funds for this ins and calculate their average return
        for(k in selected){ 
            outfund<-reorderfund_all[,k]#
            outfund<-na.omit(outfund,outfund[,1])
            #outfund<-xts(outfund[,2],as.Date(outfund[,1]))
            return<-Return.calculate(outfund)
            return_cu<-Return.cumulative(return)
            return_all<-c(return_all,return_cu)
            outfund_all<-merge.xts(outfund_all,outfund)
        }
        sorted_return_all<-sort(return_all,decreasing=TRUE)
        selected_index<-match(head(sorted_return_all,5),return_all)
        
        
        ###find those 5 funds
        for(i in selected_index){
            writefund<-outfund_all[,i]
            writefund_all<-merge.xts(writefund_all,writefund)
            fund1<-na.omit(writefund,writefund[,1])
        }
}

    intv<-5
    final_index<-((riskave-1)*intv+1):(riskave*intv)
    for(i in final_index){
        final<-writefund_all[,i]
        finalfund_all<-merge.xts(finalfund_all,final)
    }

    finalfund_all<-as.data.frame(finalfund_all)
    finalfund_all = cbind(rownames(finalfund_all),finalfund_all)
    return(finalfund_all)
}

seven<-function(data){
    data1_2 = read.csv("newfund.csv",header = TRUE, fileEncoding = "UTF-8", sep=",", na.strings = "")

    #print(data1_2[1,4])
    #print(data1_2[1,8])
    #print(ncol(data))
    data[,1] = as.Date(data[,1])
    fund_1 = data1_2[,8:9]
    fund_1[,1] = as.Date(fund_1[,1])
    fund_2 = cbind(as.Date(data1_2[,1]),data1_2[,5])

    max_date = nrow(data)
    fund_tmp = data.frame(base1 = -1*(1:max_date),base2 = -1*(1:max_date))
    date_tmp = data.frame(base1 = -1*(1:max_date),base2 = -1*(1:max_date))

    fund_1_date = 1
    fund_2_date = nrow(data1_2)
    while(!is.na(fund_1[fund_1_date,1])) fund_1_date = fund_1_date+1
    fund_1_date = fund_1_date - 1
    fund_tmp[1:fund_1_date,1] = fund_1[1:fund_1_date,2]
    fund_tmp[1:fund_2_date,2] = fund_2[1:fund_2_date,2]
    date_tmp[1:fund_1_date,1] = fund_1[1:fund_1_date,1]
    date_tmp[1:fund_2_date,2] = fund_2[1:fund_2_date,1]

    i = 1
    while (i <= max_date){
        if(is.na(date_tmp[i,1])||date_tmp[i,1]<0){
            date_tmp[i,1] = data[i,1]
            fund_tmp[i,1] = NA
            fund_1_date = fund_1_date + 1
        }
        else if(date_tmp[i,1] > data[i,1]){
            if(i < max_date){
                fund_tmp[(i+1):(fund_1_date+1),1] = fund_tmp[(i):(fund_1_date),1]
                date_tmp[(i+1):(fund_1_date+1),1] = date_tmp[(i):(fund_1_date),1]
                date_tmp[i,1] = data[i,1]
                fund_tmp[i,1] = NA
            }
            else if (i == max_date){
                date_tmp[i,1] = data[i,1]
                fund_tmp[i,1] = NA
            }
            fund_1_date = fund_1_date + 1
        }
        else if(date_tmp[i,1] < data[i,1]){
            fund_tmp[(i):(fund_1_date),1] = fund_tmp[(i+1):(fund_1_date+1),1]
            date_tmp[(i):(fund_1_date),1] = date_tmp[(i+1):(fund_1_date+1),1]
            fund_tmp[fund_1_date,1] = NA
            date_tmp[fund_1_date,1] = NA
            fund_1_date = fund_1_date - 1
            i = i - 1
        }
        i = i + 1
        #print(i)
    }

    i = 1
    while (i <= max_date){
        if(is.na(date_tmp[i,2])||date_tmp[i,2]<0){
            date_tmp[i,2] = data[i,1]
            fund_tmp[i,2] = NA
            fund_2_date = fund_2_date + 1
        }
        else if(date_tmp[i,2] > data[i,1]){
            if(i < max_date){
                fund_tmp[(i+1):(fund_2_date+1),2] = fund_tmp[(i):(fund_2_date),2]
                date_tmp[(i+1):(fund_2_date+1),2] = date_tmp[(i):(fund_2_date),2]
                date_tmp[i,2] = data[i,1]
                fund_tmp[i,2] = NA
            }
            else if (i == max_date){
                date_tmp[i,2] = data[i,1]
                fund_tmp[i,2] = NA
            }
            fund_2_date = fund_2_date + 1
        }
        else if(date_tmp[i,2] < data[i,1]){
            #print(i)
            #print(date_tmp[i,2])
            #print(data[i,1])
            #print(fund_2_date)
            fund_tmp[(i):(fund_2_date),2] = fund_tmp[(i+1):(fund_2_date+1),2]
            date_tmp[(i):(fund_2_date),2] = date_tmp[(i+1):(fund_2_date+1),2]
            fund_tmp[fund_2_date,2] = NA
            date_tmp[fund_2_date,2] = NA
            fund_2_date = fund_2_date - 1
            i = i - 1
        }
        i = i + 1
    }

    fund_tmp = fund_tmp[1:max_date,]
    data = cbind(data,fund_tmp)
    return (data)
}

fund_completion<-function(data){
    data <- seven(data)
    
    rows = nrow(data)
    fund_num = ncol(data) - 1
    ###Step 1: Complete all funds
    for (j in 1:fund_num){
        for (i in 1:rows){
            if(is.na(data[i,j+1])){
                if(i != rows){
                    #last_data = data[i-1,j+1]
                    i_tmp = i + 1;
                    while(is.na(data[i_tmp,j+1]) && i_tmp<=rows) 
                    {
                        i_tmp = i_tmp + 1
                        #print(j)
                        #print(i_tmp)
                    }
                    if(i == 1) 
                    {
                        data[i,j+1] = data[i_tmp,j+1]
                    }
                    else if (i_tmp == rows + 1) {
                        data[i,j+1] = data[i-1,j+1]
                    }
                    else{
                        data[i,j+1] = (data[i-1,j+1] + data[i_tmp,j+1]) / 2
                    }
                }
                else{
                    data[i,j+1] = data[i-1,j+1]
                }
            }
        }
    }

    return(data)
}

weights<-function(data) {
    ### Read data from last milestone 
    seven_data = data[,7:8]
    #data = final_fund_all

    #Number of funds in the final portforlio, can be specified
    portfolio_num = 5
    fund_num = portfolio_num*10

    if(FALSE){
        fund_num_tmp = floor(fund_num/10)
        fund_num_upper = fund_num_tmp * ins
        if(ins == 10) 
        {
            fund_num_upper = fund_num
        }
        selected <- data[,(fund_num_tmp*(ins-1)+1+1):(fund_num_upper+1)] #first plus one�? begin with 6-10; second plus one: first column of data is date 
        selected <- cbind(data[,1],selected)
        #print(selected)
        data <- selected
    }
    
    data_print_out <- data

    ### Construct the system by Markowitz model
    #Initialization
    rows = nrow(data)
    returns_tmp = c()
    return_tmp = data.frame()

    for (j in 1:portfolio_num){
        data_tmp <- data.frame(data[,1],data[,j+1])
        data_tmp <- xts(data_tmp[,2],as.Date(data_tmp[,1]))
        return_tmp <- periodReturn(data_tmp,period="daily",type="log")
        returns_tmp <- cbind(returns_tmp,return_tmp)
    }

    returns <- returns_tmp[,1:5]
    rownames(returns) <- data[,1]
    colnames(returns) <- c("fd1", "fd2", "fd3", "fd4","fd5")
    funds <- colnames(returns)
    init <- portfolio.spec(assets = funds)
    init <- add.constraint(portfolio=init, type="leverage",min_sum=1.00, max_sum=1.00)
    init <- add.constraint(portfolio=init, type="box", min=0.10, max=0.40)

    #6.3 Minimize variance with ROI
    minvar <- add.objective(portfolio=init, type="risk", name="var")
    opt_minvar <- optimize.portfolio(R=returns, portfolio=minvar, optimize_method="ROI", trace=TRUE)
    
    w = extractWeights(opt_minvar)

    data_print_out[,1] = as.integer(data_print_out[,1])
    data_print_out_final = rbind(data_print_out,w)
    return_data = data_print_out_final[,-1]
    return_data = rbind(colnames(return_data),return_data)
    return (return_data)
}

R_final<-function(asset_class,geo,risk_aversion){
        init<-read.csv("filter.csv",header=TRUE, sep=",")
        source<-read.csv("bloomberg.csv",header=T,sep=",")
    if(FALSE){
        asset_class<-c(1,2,3,4)
        geo<-c(2,4,3,1,6,5,7)
        risk_aversion<-3 #may get specified
    }
    level_1<-filter(init,source,asset_class,geo,risk_aversion)
    level_2<-fund_completion(level_1)
    level_3<-weights(level_2)
    return(level_3)
}

        ''')

    import pandas as pd
    import numpy as np
    import math

    level=5
    return_data = robjects.r['R_final'](robjects.IntVector([3,2,1,4]),robjects.IntVector([2,4,3,1,6,5,7]),level)
    return_data=list(return_data)
    length=len(return_data[0])


    ## Change data type
    data=np.array(return_data[:])
    data=data[:,1:length].astype(float)
    data=data.transpose()

    ## A function to calculate the average
    def weighted_avg(in_put, weight):
        if np.ndim(in_put) == 1:
            return np.sum(in_put * weight)
        else:
            size = in_put.shape[0]
            tmp = np.zeros(size)
            for i in range(0, size):
                tmp[i] = np.sum(in_put[i, :] * weight)
            return tmp

    ###initialization_fund
    nav = data[:-1, :5]  # here -1: space for weights
    weight = data[-1, :5]
    date = nav.shape[0]

    fund_num = nav.shape[1]
    data_all = np.zeros((14, date))  # here minus 1: space for weights

    ###initialization_base1
    nav_b1 = data[:-1, 5]  # here -1: space for weights
    data_all_b1 = np.zeros((14, date))  # here minus 1: space for weights

    ###initialization_base2
    nav_b2 = data[:-1, 6]  # here -1: space for weights
    data_all_b2 = np.zeros((14, date))  # here minus 1: space for weights


    ###daily returns_fund
    daily_returns = np.zeros((date - 1, fund_num))
    for j in range(0, fund_num):
        daily_returns[:, j] = np.diff(nav[:, j]) / nav[:-1, j]
    data_all[9, :-1] = weighted_avg(daily_returns, weight)


    ###daily returns_base1
    data_all_b1[9, :-1] = np.diff(nav_b1[:]) / nav_b1[:-1]

    ###daily returns_base2
    data_all_b2[9, :-1] = np.diff(nav_b2[:]) / nav_b2[:-1]


    ###---Step 1
    ###accumulative daily returns_fund
    accu_daily_returns = np.zeros((date - 1, fund_num))
    for j in range(0, fund_num):
        for i in range(0, date - 1):
            accu_daily_returns[i, j] = float(nav[i + 1, j] / nav[0, j] - 1)
    data_all[1, :-1] = weighted_avg(accu_daily_returns, weight)
    data_all[10, :-1]=data_all[1, :-1]*100
    t1 = []
    t1.append(float("%.2f" % (data_all[1, -2] * 1000 + 1000)))

    ###accumulative daily returns_b1
    for i in range(0, date - 1):
        data_all_b1[1, i] = float(nav_b1[i + 1] / nav_b1[0] - 1)
    data_all_b1[10, :-1] = data_all_b1[1, :-1] * 100
    t1_b1 = []
    t1_b1.append(float("%.2f" % (data_all_b1[1, -2] * 1000 + 1000)))

    ###accumulative daily returns_b2
    for i in range(0, date - 1):
        data_all_b2[1, i] = float(nav_b2[i + 1] / nav_b2[0] - 1)
    data_all_b2[10, :-1] = data_all_b2[1, :-1] * 100
    t1_b2 = []
    t1_b2.append(float("%.2f" % (data_all_b2[1, -2] * 1000 + 1000)))


    ###get Chinese name
    name_out=[]
    for i in range(0,5):
        name_out.append(names.get(return_data[i][0], "-"))


    ###---Step 2
    ###annualized return & std_fund
    annual_return = ((1 + (data_all[1, -2])) ** (1 / (date / 252)) - 1)
    # data_all[1,-2] is the second last number of the data_all row, which is the acumulative rate
    data_all[2, 0] = float("%.2f" % (annual_return*100))
    annual_std = np.std(data_all[9, :-1]) * np.sqrt(252)
    data_all[2, 2] = float("%.2f" %(annual_std*100))

    ###annualized return & std_b1
    annual_return_b1 = ((1 + (data_all_b1[1, -2])) ** (1 / (date / 252)) - 1)
    # data_all[1,-2] is the second last number of the data_all row, which is the acumulative rate
    data_all_b1[2, 0] = float("%.2f" % (annual_return_b1 * 100))
    annual_std_b1 = np.std(data_all_b1[9, :-1]) * np.sqrt(252)
    data_all_b1[2, 2] = float("%.2f" % (annual_std_b1 * 100))

    ###annualized return & std_b2
    annual_return_b2 = ((1 + (data_all_b2[1, -2])) ** (1 / (date / 252)) - 1)
    # data_all[1,-2] is the second last number of the data_all row, which is the acumulative rate
    data_all_b2[2, 0] = float("%.2f" % (annual_return_b2 * 100))
    annual_std_b2 = np.std(data_all_b2[9, :-1]) * np.sqrt(252)
    data_all_b2[2, 2] = float("%.2f" % (annual_std_b2 * 100))


    ## Sharpe Ratio_fund
    def vol(returns):
        # Return the standard deviation of returns
        return np.std(returns)
    def m(returns):
        return np.mean(returns)
    SR = (m(data_all[9])) / vol(data_all[9]) * math.sqrt(252)
    data_all[2, 1]=float("%.2f" %SR)
    data_all[6, 0] = SR

    ## Sharpe Ratio_fund_b1
    SR_b1 = (m(data_all_b1[9])) / vol(data_all_b1[9]) * math.sqrt(252)
    data_all_b1[2, 1] = float("%.2f" % SR_b1)
    data_all_b1[6, 0] = SR_b1

    ## Sharpe Ratio_fund_b2
    SR_b2 = (m(data_all_b2[9])) / vol(data_all_b2[9]) * math.sqrt(252)
    data_all_b2[2, 1] = float("%.2f" % SR_b2)
    data_all_b2[6, 0] = SR_b2

    ## 最大回撤_fund
    def prices(returns, base):
        # Converts returns into prices
        s = [base]
        for i in range(len(returns)):
            s.append(base * (1 + returns[i]))
        return np.array(s)

    def dd(returns, tau):
        # Returns the draw-down given time period tau
        values = prices(returns, 100)
        pos = len(values) - 1
        pre = pos - tau
        drawdown = float('+inf')
        # Find the maximum drawdown given tau
        while pre >= 0:
            dd_i = (values[pos] / values[pre]) - 1
            if dd_i < drawdown:
                drawdown = dd_i
            pos, pre = pos - 1, pre - 1
        # Drawdown should be positive
        return abs(drawdown)

    def max_dd(returns):
        # Returns the maximum draw-down for any tau in (0, T) where T is the length of the return series
        max_drawdown = float('-inf')
        for i in range(0, len(returns)):
            drawdown_i = dd(returns, i)
            if drawdown_i > max_drawdown:
                max_drawdown = drawdown_i
        # Max draw-down should be positive
        return abs(max_drawdown)
    # maxdd_tmp=max_dd(data_all[9])
    # data_all[2, 3] = float("%.2f" % (maxdd_tmp * 100))
    #
    # maxdd_tmp_b1 = max_dd(data_all_b1[9])
    # data_all_b1[2, 3] = float("%.2f" % (maxdd_tmp_b1 * 100))
    #
    # maxdd_tmp_b2 = max_dd(data_all_b2[9])
    # data_all_b2[2, 3] = float("%.2f" % (maxdd_tmp_b2 * 100))

    ## 95% VAR_fund
    d_sort=data_all[9,:-1].copy()
    d_sort.sort()
    va=d_sort[int((date-1)*0.05)]
    data_all[2, 4] = float("%.2f" % (va*100))

    ## 95% VAR_b1
    d_sort_b1 = data_all_b1[9, :-1].copy()
    d_sort_b1.sort()
    va_b1 = d_sort_b1[int((date - 1) * 0.05)]
    data_all_b1[2, 4] = float("%.2f" % (va_b1 * 100))

    ## 95% VAR_b2
    d_sort_b2 = data_all_b2[9, :-1].copy()
    d_sort_b2.sort()
    va_b2 = d_sort_b2[int((date - 1) * 0.05)]
    data_all_b2[2, 4] = float("%.2f" % (va_b2 * 100))

    t2=[]
    t2.append(data_all[2, 0])
    t2.append(data_all[2, 1])
    t2.append(data_all[2, 2])
    t2.append(data_all[2, 3])
    t2.append(data_all[2, 4])

    t2.append(data_all_b1[2, 0])
    t2.append(data_all_b1[2, 1])
    t2.append(data_all_b1[2, 2])
    t2.append(data_all_b1[2, 3])
    t2.append(data_all_b1[2, 4])

    t2.append(data_all_b2[2, 0])
    t2.append(data_all_b2[2, 1])
    t2.append(data_all_b2[2, 2])
    t2.append(data_all_b2[2, 3])
    t2.append(data_all_b2[2, 4])

    ###---Step 3: Chosen date return
    ###fund
    chosen_return = np.zeros((48, fund_num))
    dis = int(np.floor(date / 48))
    for j in range(0, 5):
        for i in range(0, 48):
            if i == 47:
                upper_bound = date - 1
            else:
                upper_bound = (i + 1) * dis
            chosen_return[i, j] = float(nav[upper_bound, j] / nav[i * dis, j] - 1)
    data_all[3, :48] = weighted_avg(chosen_return, weight)
    data_all[11, :48] = data_all[3, :48]*100

    ###base1
    dis_b1 = int(np.floor(date / 48))
    for i in range(0, 48):
        if i == 47:
            upper_bound_b1 = date - 1
        else:
            upper_bound_b1 = (i + 1) * dis_b1
        data_all_b1[3, i] = float(nav_b1[upper_bound_b1] / nav_b1[i * dis_b1] - 1)
    data_all_b1[11, :48] = data_all_b1[3, :48] * 100

    ###base2
    dis_b2 = int(np.floor(date / 48))
    for i in range(0, 48):
        if i == 47:
            upper_bound_b2 = date - 1
        else:
            upper_bound_b2 = (i + 1) * dis_b2
        data_all_b2[3, i] = float(nav_b2[upper_bound_b2] / nav_b2[i * dis_b2] - 1)
    data_all_b2[11, :48] = data_all_b2[3, :48] * 100

    ###---Step 4: Calculate date for Step 3
    date_g = pd.read_csv("date.csv", header=None).astype(str)
    ##48个日期
    date_tmp = []
    for i in range(0, 47):
        date_tmp.append(date_g[0][i * int(date / 48)])
    date_tmp.append(date_g[0][date-1])


    ###---Step 5: Recent value
    ###fund
    within_0 = np.zeros(fund_num)
    for j in range(0, fund_num):
        within_0[j] = float(nav[date - 1, j] / nav[date - 1 - 5, j] - 1)  # 5 weekdays
    data_all[5, 0] = weighted_avg(within_0, weight)  # within a week

    within_1 = np.zeros(fund_num)
    for j in range(0, fund_num):
        within_1[j] = float(nav[date - 1, j] / nav[date - 1 - 21, j] - 1)  # 21 month days
    data_all[5, 1] = weighted_avg(within_1, weight)  # within a month
    within_2 = np.zeros(fund_num)
    for j in range(0, fund_num):
        within_2[j] = float(nav[date - 1, j] / nav[date - 1 - 63, j] - 1)  # 63 3months
    data_all[5, 2] = weighted_avg(within_2, weight)  # within 3 months

    within_3 = np.zeros(fund_num)
    for j in range(0, fund_num):
        within_3[j] = float(nav[date - 1, j] / nav[date - 1 - 126, j] - 1)  # 126 half a year
    data_all[5, 3] = weighted_avg(within_3, weight)  # within half a year

    within_4 = np.zeros(fund_num)
    for j in range(0, fund_num):
        within_4[j] = float(nav[date - 1, j] / nav[date - 1 - 252, j] - 1)  # 252 days a year
    data_all[5, 4] = weighted_avg(within_4, weight)  # within a year

    # within_5 = np.zeros(fund_num)
    # for j in range(0, fund_num):
    #     within_5[j] = float(nav[date - 1, j] / nav[date - 1 - (date % 252), j] - 1)  # this year
    # data_all[5, 5] = weighted_avg(within_5, weight)  # this year

    ###b1
    data_all_b1[5, 0] = float(nav_b1[date - 1] / nav_b1[date - 1 - 5] - 1)  # 5 weekdays
    data_all_b1[5, 1] = float(nav_b1[date - 1] / nav_b1[date - 1 - 21] - 1)  # 21 month days
    data_all_b1[5, 2] = float(nav_b1[date - 1] / nav_b1[date - 1 - 63] - 1)  # 63 3months
    data_all_b1[5, 3] = float(nav_b1[date - 1] / nav_b1[date - 1 - 126] - 1)  # 126 half a year
    data_all_b1[5, 4] = float(nav_b1[date - 1] / nav_b1[date - 1 - 252] - 1)  # 252 days a year

    ###b2
    data_all_b2[5, 0] = float(nav_b2[date - 1] / nav_b2[date - 1 - 5] - 1)  # 5 weekdays
    data_all_b2[5, 1] = float(nav_b2[date - 1] / nav_b2[date - 1 - 21] - 1)  # 21 month days
    data_all_b2[5, 2] = float(nav_b2[date - 1] / nav_b2[date - 1 - 63] - 1)  # 63 3months
    data_all_b2[5, 3] = float(nav_b2[date - 1] / nav_b2[date - 1 - 126] - 1)  # 126 half a year
    data_all_b2[5, 4] = float(nav_b2[date - 1] / nav_b2[date - 1 - 252] - 1)  # 252 days a year

    t3 = []
    ###fund
    t3.append(float("%.2f" % (data_all[5, 0]*100)))
    t3.append(float("%.2f" % (data_all[5, 1]*100)))
    t3.append(float("%.2f" % (data_all[5, 2]*100)))
    t3.append(float("%.2f" % (data_all[5, 3]*100)))
    t3.append(float("%.2f" % (data_all[5, 4]*100)))

    ###base1
    t3.append(float("%.2f" % (data_all_b1[5, 0] * 100)))
    t3.append(float("%.2f" % (data_all_b1[5, 1] * 100)))
    t3.append(float("%.2f" % (data_all_b1[5, 2] * 100)))
    t3.append(float("%.2f" % (data_all_b1[5, 3] * 100)))
    t3.append(float("%.2f" % (data_all_b1[5, 4] * 100)))

    ###base2
    t3.append(float("%.2f" % (data_all_b2[5, 0] * 100)))
    t3.append(float("%.2f" % (data_all_b2[5, 1] * 100)))
    t3.append(float("%.2f" % (data_all_b2[5, 2] * 100)))
    t3.append(float("%.2f" % (data_all_b2[5, 3] * 100)))
    t3.append(float("%.2f" % (data_all_b2[5, 4] * 100)))

    # ### Yearly Return_fund
    # year_num=int(np.floor(date/252))
    # year_re = np.zeros(fund_num)
    # for i in range(0,year_num):
    #     for j in range(0, fund_num):
    #         year_re[j] = float((nav[1 + 252 * (i+1), j] / nav[1 + 252 * i, j] - 1) )
    #     data_all[13, i] = (weighted_avg(year_re, weight)* 100)
    #
    # ### Yearly Return_b1
    # for i in range(0, year_num):
    #     data_all_b1[13, i] = float((nav_b1[1 + 252 * (i+1)] / nav_b1[1 + 252 * i] - 1) *100)
    #
    # ### Yearly Return_b2
    # for i in range(0, year_num):
    #     data_all_b2[13, i] = float((nav_b2[1 + 252 * (i + 1)] / nav_b2[1 + 252 * i] - 1) * 100)


    ### Yearly Return_fund
    year_re = np.zeros(fund_num)
    for i in range(0, 5):
        for j in range(0, fund_num):
            year_re[j] = float((nav[date - 1 - 252 * i, j] / nav[date - 1 - 252 * (i + 1), j] - 1) ) # 5 years
        data_all[13, i] = (weighted_avg(year_re, weight)* 100)
    for j in range(0, fund_num):
        year_re[j] = float((nav[date - 1 - 252 * 5, j] / nav[1, j] - 1))  # first year
    data_all[13, 5] = (weighted_avg(year_re, weight)* 100)

    ### Yearly Return_b1
    for i in range(0, 5):
        data_all_b1[13, i] = float((nav_b1[date - 1 - 252 * i] / nav_b1[date - 1 - 252 * (i + 1)] - 1)* 100)  # 5 years
    data_all_b1[13, 5] = float((nav_b1[date - 1 - 252 * 5] / nav_b1[1] - 1)* 100)  # first year

    ### Yearly Return_b2
    for i in range (0,5):
        data_all_b2[13, i] = float((nav_b2[date - 1 - 252*i] / nav_b2[date - 1 - 252*(i+1)] - 1)* 100)  # 5 years
    data_all_b2[13, 5] = float((nav_b2[date - 1 - 252 * 5] / nav_b2[1] - 1)* 100) # first year

    t6=[]
    t6.append(float("%.2f" % (data_all[13, 5])))
    t6.append(float("%.2f" % (data_all[13, 4])))
    t6.append(float("%.2f" % (data_all[13, 3])))
    t6.append(float("%.2f" % (data_all[13, 2])))
    t6.append(float("%.2f" % (data_all[13, 1])))
    t6.append(float("%.2f" % (data_all[13, 0])))
    t6.append(float("%.2f" % (data_all_b1[13, 5])))
    t6.append(float("%.2f" % (data_all_b1[13, 4])))
    t6.append(float("%.2f" % (data_all_b1[13, 3])))
    t6.append(float("%.2f" % (data_all_b1[13, 2])))
    t6.append(float("%.2f" % (data_all_b1[13, 1])))
    t6.append(float("%.2f" % (data_all_b1[13, 0])))
    t6.append(float("%.2f" % (data_all_b2[13, 5])))
    t6.append(float("%.2f" % (data_all_b2[13, 4])))
    t6.append(float("%.2f" % (data_all_b2[13, 3])))
    t6.append(float("%.2f" % (data_all_b2[13, 2])))
    t6.append(float("%.2f" % (data_all_b2[13, 1])))
    t6.append(float("%.2f" % (data_all_b2[13, 0])))


    ###---Step 6: Ratio
    ##Sortino Ratio
    def lpm(returns, threshold, order):
        # This method returns a lower partial moment of the returns
        # Create an array he same length as returns containing the minimum return threshold
        threshold_array = np.empty(len(returns))
        threshold_array.fill(threshold)
        # Calculate the difference between the threshold and the returns
        diff = threshold_array - returns
        # Set the minimum of each to 0
        diff = diff.clip(min=0)
        # Return the sum of the different to the power of order
        return np.sum(diff ** order) / len(returns)
    def sortino_ratio(er, returns, rf, target=0):
        return (er - rf) / math.sqrt(lpm(returns, target, 2))
    ###fund
    data_all[6, 1]=sortino_ratio(m(data_all[9]), data_all[9], 0, 0) * math.sqrt(252)
    ###base1
    data_all_b1[6, 1] = sortino_ratio(m(data_all_b1[9]), data_all_b1[9], 0, 0) * math.sqrt(252)
    ###base2
    data_all_b2[6, 1] = sortino_ratio(m(data_all_b2[9]), data_all_b2[9], 0, 0) * math.sqrt(252)


    ##Sterling Ratio
    def average_dd(returns, periods):
        # Returns the average maximum drawdown over n periods
        drawdowns = []
        for i in range(0, len(returns)):
            drawdown_i = dd(returns, i)
            drawdowns.append(drawdown_i)
        drawdowns = sorted(drawdowns)
        total_dd = abs(drawdowns[0])
        for i in range(1, periods):
            total_dd += abs(drawdowns[i])
        return total_dd / periods
    def sterling_ration(er, returns, rf, periods):
        return (er - rf) / average_dd(returns, periods)
    # ###fund
    # data_all[6, 2]=sterling_ration(m(data_all[9]),data_all[9],0,100)* math.sqrt(252)
    # ###base1
    # data_all_b1[6, 2] = sterling_ration(m(data_all_b1[9]), data_all_b1[9], 0, 100)* math.sqrt(252)
    # ###base2
    # data_all_b2[6, 2] = sterling_ration(m(data_all_b2[9]), data_all_b2[9], 0, 100)* math.sqrt(252)

    ##Calmar Ratio
    def calmar_ratio(er, returns, rf):
        return (er - rf) / max_dd(returns)
    # ###fund
    # data_all[6, 3]=calmar_ratio(m(data_all[9]), data_all[9], 0)* math.sqrt(252)
    # ###base1
    # data_all_b1[6, 3] = calmar_ratio(m(data_all_b1[9]), data_all_b1[9], 0)* math.sqrt(252)
    # ###base2
    # data_all_b2[6, 3] = calmar_ratio(m(data_all_b2[9]), data_all_b2[9], 0) * math.sqrt(252)

    t4=[]
    t4.append(float("%.2f" % (data_all[6, 0])))
    t4.append(float("%.2f" % (data_all[6, 1])))
    t4.append(float("%.2f" % (data_all[6, 2])))
    t4.append(float("%.2f" % (data_all[6, 3])))
    t4.append(float("%.2f" % (data_all_b1[6, 0])))
    t4.append(float("%.2f" % (data_all_b1[6, 1])))
    t4.append(float("%.2f" % (data_all_b1[6, 2])))
    t4.append(float("%.2f" % (data_all_b1[6, 3])))
    t4.append(float("%.2f" % (data_all_b2[6, 0])))
    t4.append(float("%.2f" % (data_all_b2[6, 1])))
    t4.append(float("%.2f" % (data_all_b2[6, 2])))
    t4.append(float("%.2f" % (data_all_b2[6, 3])))

    ###---Step 7: Moving Volatility
    ###fund
    moving_std = np.zeros(date - 1)
    for i in range(21, date - 1):
        moving_std[i - 21] = np.std(data_all[9, (i - 21):(i)]) * np.sqrt(252)
    data_all[7, :-1] = moving_std
    data_all[12, :-1] = data_all[7, :-1] * 100

    ###base1
    moving_std_b1 = np.zeros(date - 1)
    for i in range(21, date - 1):
        moving_std_b1[i - 21] = np.std(data_all_b1[9, (i - 21):(i)]) * np.sqrt(252)
    data_all_b1[7, :-1] = moving_std_b1
    data_all_b1[12, :-1] = data_all_b1[7, :-1] * 100

    ###base2
    moving_std_b2 = np.zeros(date - 1)
    for i in range(21, date - 1):
        moving_std_b2[i - 21] = np.std(data_all_b2[9, (i - 21):(i)]) * np.sqrt(252)
    data_all_b2[7, :-1] = moving_std_b2
    data_all_b2[12, :-1] = data_all_b2[7, :-1] * 100


    ###---Step 8: Correlation Matrix
    a0 = data[1:-2, 0]
    a1 = data[1:-2, 1]
    a2 = data[1:-2, 2]
    a3 = data[1:-2, 3]
    a4 = data[1:-2, 4]

    t5=[]
    t5.append(float("%.3f" %(np.corrcoef(a0, a1)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a0, a2)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a0, a3)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a0, a4)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a1, a2)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a1, a3)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a1, a4)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a2, a3)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a2, a4)[0, 1])))
    t5.append(float("%.3f" %(np.corrcoef(a3, a4)[0, 1])))

    date_now=(date_g[0][len(date_g[0])-1])
    date_begin = (date_g[0][1])

    g1 = {
        'title': {
            'text': '我的组合',
            'left': 'center',
            'y': 'top'
        },
        'tooltip': {
            'trigger': 'item',
            'formatter': '{a} <br/>{b} : {c} ({d}%)'
        },
        'legend': {
            'orient': 'vertical',
            'left': 'left',
            'data': [name_out[0],name_out[1],name_out[2],name_out[3],name_out[4]]
        },
        'series': [
            {
                'name': '基金比重',
                'type': 'pie',
                'radius': '55%',
                'center': ['50%', '60%'],
                'data': [
                    {'value': return_data[0][length - 1], 'name': name_out[0]},
                    {'value': return_data[1][length - 1], 'name': name_out[1]},
                    {'value': return_data[2][length - 1], 'name': name_out[2]},
                    {'value': return_data[3][length - 1], 'name': name_out[3]},
                    {'value': return_data[4][length - 1], 'name': name_out[4]}
                ],
                'emphasis': {
                    'itemStyle': {
                        'shadowBlur': 10,
                        'shadowOffsetX': 0,
                        'shadowColor': 'rgba(0, 0, 0, 0.5)'
                    }
                }
            }
        ]
    };

    g2 = {
        'title': {
            'text': '累计收益走势'
        },
        'tooltip': {
            'trigger': 'axis'
        },
        'legend': {
            'data': ['我的组合', '基准1(沪深300)','基准2(标普500)']
        },
        'grid': {
            'left': '10%',
            'right': '10%',
            'bottom': '3%',
            'containLabel': 'true'
        },
        'toolbox': {
            'feature': {
                'saveAsImage': {}
            }
        },
        'xAxis': {
            'type': 'category',
            'boundaryGap': 'false',
            'data': list(date_g[0][2:len(date_g[0])-1])
        },
        'yAxis': {
            'type': 'value',
            'axisLabel': {
                            'show': 'true',
                            'interval': 'auto',
                            'formatter': '{value} %'
                            }
        },
        'series': [
            {
                'name': '我的组合',
                'type': 'line',
                'data': list(data_all[10,:-1])
            },
            {
                'name': '基准1(沪深300)',
                'type': 'line',
                'data': list(data_all_b1[10,:-1])
            },
            {
                'name': '基准2(标普500)',
                'type': 'line',
                'data': list(data_all_b2[10,:-1])
            }
        ]
    };

    g3 = {
        'title': {
            'text': '月度收益分布'
        },
        'tooltip': {
            'trigger': 'axis',
            'axisPointer': {
                'type': 'cross',
                'crossStyle': {
                    'color': '#999'
                }
            }
        },
        'toolbox': {
            'feature': {
                'dataView': {'show': 'true', 'readOnly': 'false'},
                'magicType': {'show': 'true', 'type': ['bar']},
                'restore': {'show': 'true'},
                'saveAsImage': {'show': 'true'}
            }
        },
        'legend': {
            'data': ['我的组合', '基准1(沪深300)','基准2(标普500)']
        },
        'xAxis': [
            {
                'type': 'category',
                'data': date_tmp,
                'axisPointer': {
                    'type': 'shadow'
                }
            }
        ],
        'yAxis': [
            {
                'type': 'value',
                'axisLabel': {
                    'show': 'true',
                    'interval': 'auto',
                    'formatter': '{value} %'
                }
            }
        ],
        'series': [
            {
                'name': '我的组合',
                'type': 'bar',
                'data': list(data_all[11])
            },
            {
                'name': '基准1(沪深300)',
                'type': 'bar',
                'data': list(data_all_b1[11])
            },
            {
                'name': '基准2(标普500)',
                'type': 'bar',
                'data': list(data_all_b2[11])
            }
        ]
    };

    g4 = {
        'tooltip': {
            'trigger': 'axis',
            'axisPointer': {
                'type': 'cross',
                'crossStyle': {
                    'color': '#999'
                }
            }
        },
        'toolbox': {
            'feature': {
                'dataView': {'show': 'true', 'readOnly': 'false'},
                'magicType': {'show': 'true', 'type': ['line', 'bar']},
                'restore': {'show': 'true'},
                'saveAsImage': {'show': 'true'}
            }
        },
        'legend': {
            'data': ['我的组合', '基准1(沪深300)','基准2(标普500)']
        },
        'xAxis': [
            {
                'type': 'category',
                'data': ['夏普比率','索提诺比率'],
                'axisPointer': {
                    'type': 'shadow'
                }
            }
        ],
        'yAxis': [
            {
                'type': 'value'
            }
        ],
        'series': [
            {
                'name': '我的组合',
                'type': 'bar',
                'data': list(data_all[6])
            },
            {
                'name': '基准1(沪深300)',
                'type': 'bar',
                'data': list(data_all_b1[6])
            },
            {
                'name': '基准2(标普500))',
                'type': 'bar',
                'data': list(data_all_b2[6])
            }
        ]
    };

    g5 = {
        'title': {
            'text': '滚动年化波动率走势图'
        },
        'tooltip': {
            'trigger': 'axis'
        },
        'legend': {
            'data': ['我的组合', '基准1(沪深300)','基准2(标普500)']
        },
        'grid': {
            'left': '10%',
            'right': '10%',
            'bottom': '3%',
            'containLabel': 'true'
        },
        'toolbox': {
            'feature': {
                'saveAsImage': {}
            }
        },
        'xAxis': {
            'type': 'category',
            'boundaryGap': 'false',
            'data': list(date_g[0][22:len(date_g[0])])
        },
        'yAxis': {
            'type': 'value',
            'axisLabel': {
                'show': 'true',
                'interval': 'auto',
                'formatter': '{value} %'
            }
        },
        'series': [
            {
                'name': '我的组合',
                'type': 'line',
                'data': list(data_all[12][0:(date-22)])
            },
            {
                'name': '基准1(沪深300)',
                'type': 'line',
                'data': list(data_all_b1[12][0:(date-22)])
            },
            {
                'name': '基准2(标普500)',
                'type': 'line',
                'data': list(data_all_b2[12][0:(date-22)])
            }
        ]
    };

    g6 = {
        'title': {
            'text': '相关系数矩阵'
        },
        'tooltip': {
            'position': 'top'
        },
        'animation': 'false',
        'grid': {
            'height': '50%',
            'top': '10%'
        },
        'xAxis': {
            'position': 'top',
            'type': 'category',
            'data': [return_data[0][0],return_data[1][0],return_data[2][0],return_data[3][0],return_data[4][0]],
            'splitArea': {
                'show': 'true'
            }
        },
        'yAxis': {
            'type': 'category',
            'data': [return_data[4][0],return_data[3][0],return_data[2][0],return_data[1][0],return_data[0][0]],
            'splitArea': {
                'show': 'true'
            }
        },
        'visualMap': {
            'min': 0,
            'max': 1,
            'calculable': 'true',
            'orient': '',
            'left': 'right',
            'bottom': '50%'
        },
        'series': [{
            'name': 'Punch Card',
            'type': 'heatmap',
            'data': [[4,0,1],[4,1,t5[0]],[4,2,t5[1]],[4,3,t5[2]],[4,4,t5[3]],
                     [3,0,t5[0]],[3,1,1],[3,2,t5[4]],[3,3,t5[5]],[3,4,t5[6]],
                     [2,0,t5[1]],[2,1,t5[4]],[2,2,1],[2,3,t5[7]],[2,4,t5[8]],
                     [1,0,t5[2]],[1,1,t5[5]],[1,2,t5[7]],[1,3,1],[1,4,t5[9]],
                     [0,0,t5[3]],[0,1,t5[6]],[0,2,t5[8]],[0,3,t5[9]],[0,4,1]],
            'label': {
                'show': 'true'
            },
            'emphasis': {
                'itemStyle': {
                    'shadowBlur': 10,
                    'shadowColor': 'rgba(0, 0, 0, 0.5)'
                }
            }
        }]
    };

    g7 = {
        'title': {
            'text': '年度收益分布'
        },
        'tooltip': {
            'trigger': 'axis',
            'axisPointer': {
                'type': 'cross',
                'crossStyle': {
                    'color': '#999'
                }
            }
        },
        'toolbox': {
            'feature': {
                'dataView': {'show': 'true', 'readOnly': 'false'},
                'magicType': {'show': 'true', 'type': ['bar']},
                'restore': {'show': 'true'},
                'saveAsImage': {'show': 'true'}
            }
        },
        'legend': {
            'data': ['我的组合', '基准1(沪深300)', '基准2(标普500)']
        },
        'xAxis': [
            {
                'type': 'category',
                'data': [2014,2015,2016,2017,2018,2019],
                'axisPointer': {
                    'type': 'shadow'
                }
            }
        ],
        'yAxis': [
            {
                'type': 'value',
                'axisLabel': {
                    'show': 'true',
                    'interval': 'auto',
                    'formatter': '{value} %'
                }
            }
        ],
        'series': [
            {
                'name': '我的组合',
                'type': 'bar',
                'data': list(data_all[13])
            },
            {
                'name': '基准1(沪深300)',
                'type': 'bar',
                'data': list(data_all_b1[13])
            },
            {
                'name': '基准2(标普500)',
                'type': 'bar',
                'data': list(data_all_b2[13])
            }
        ]
    };

    result = {
        'a': g1,
        'b': g2,
        'c': g3,
        'd': g4,
        'e': g5,
        'f': g6,
        'g':t4,
        'h':t3,
        'i':t2,
        'j':t1,
        'k':t6,
        'l': g7,
        'date_now': date_now,
        'date_begin': date_begin
    }


    return render_template('g2.html', result=result)


# else:
#     return render_template('option.html')


if __name__ == '__main__':
    app.run(debug=True)
